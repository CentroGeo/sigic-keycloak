import{jsxs as F,Fragment as K,jsx as l}from"react/jsx-runtime";import{bk as N,b_ as X,u as H,a as L,V as Y,B as Z,q as ee,w as J,aT as Q,c3 as te,aU as se,f as W,T as E,ca as ie,h as $,aO as ne,M as le,m as ae,aI as oe,aJ as re,D as ce,aj as de,bD as pe}from"./main-Dml5vH_M.js";import{useState as R}from"react";import{t as z}from"./translationFormatter-DtFomvax.js";import{u as me}from"./useLocaleSort-DeXbTEE9.js";import{u as ge}from"./ConfirmDialog-BN0phSta.js";import{F as fe}from"./filter-icon-BO7Evf9d.js";const j={delete:["delClientRoleMappings","delRealmRoleMappings"],listEffective:["listRoleMappings","listCompositeRealmRoleMappings","listCompositeClientRoleMappings"],listAvailable:["listAvailableClientRoleMappings","listAvailableRealmRoleMappings"]},_={delete:["delClientScopeMappings","delRealmScopeMappings"],listEffective:["listScopeMappings","listCompositeRealmScopeMappings","listCompositeClientScopeMappings"],listAvailable:["listAvailableClientScopeMappings","listAvailableRealmScopeMappings"]},U={groups:j,users:j,clientScopes:_,clients:_,roles:{delete:["delCompositeRoles","delCompositeRoles"],listEffective:["getCompositeRoles","getCompositeRoles","getCompositeRolesForClient"],listAvailable:["listRoles","find"]}},ue=(t,e)=>t[e],I=(t,e,i,...s)=>ue(t,e)[i](...s),Re=(t,e,i,s)=>s.map(a=>{const o={id:a.role.id,name:a.role.name},n=U[e]?.delete[a.client?0:1];return I(t,e,n,{id:i,clientUniqueId:a.client?.id,client:a.client?.id,roles:[o]},[o])}),he=async(t,e,i)=>{const s=U[e].listEffective[0],a=I(t,e,s,{id:i});if(e!=="roles")return a;const o=await a;return{clientMappings:await Promise.all(o.filter(m=>m.clientRole).map(async m=>{const h=await t.clients.findOne({id:m.containerId});return m.containerId=h?.clientId,{...h,mappings:[m]}})),realmMappings:o.filter(m=>!m.clientRole)}},ye=async(t,e,i)=>{const s=U[e].listEffective[1];if(e!=="roles")return(await I(t,e,s,{id:i})).map(n=>({role:n}));const a=await I(t,e,s,{id:i}),o=await Promise.all(a.filter(n=>n.composite).map(n=>I(t,e,s,{id:n.id})));return[...a,...o.flat()].map(n=>({role:n}))},Ce=async(t,e,i)=>{const s=U[e].listAvailable[1];return(await I(t,e,s,i)).map(a=>({role:a}))},P=async(t,{id:e,type:i,first:s,max:a,search:o,endpoint:n})=>N(t,`/ui-ext/${n}/${i}/${e}`,{first:(s||0).toString(),max:(a||10).toString(),search:o||""}),ve=(t,e)=>P(t,{...e,endpoint:"available-roles"}),Me=(t,e)=>P(t,{...e,endpoint:"effective-roles"}),Fe=(t,e)=>N(t,"ui-ext/brute-force-user",e),Ke=(t,e)=>P(t,{...e,endpoint:"authentication-management"}),Ae=(t,e,i)=>[...i?t.map(s=>({id:s.role.id,...s,role:{...s.role,isInherited:!1}})):e.map(s=>({id:s.role.id,...s,role:{...s.role,isInherited:t.find(a=>a.role.id===s.role.id)===void 0}}))],G=({role:t,client:e})=>F(K,{children:[e?.clientId&&l(X,{isRead:!0,className:"keycloak-admin--role-mapping__client-name",children:e.clientId}),t.name]}),Ee=({name:t,id:e,type:i,isManager:s=!0,save:a})=>{const{adminClient:o}=H(),{t:n}=L(),{addAlert:m,addError:h}=Y(),[d,T]=R(0),y=()=>T(d+1),[v,M]=R(!0),[f,A]=R(!1),[b,S]=R([]),B=async c=>{await a(c),y()},q=async()=>{let c=[],C=[];v||(c=await ye(o,i,e),C=(await Me(o,{type:i,id:e})).map(r=>({client:{clientId:r.client,id:r.clientId},role:{id:r.id,name:r.role,description:r.description}})),c=c.filter(r=>!C.some(u=>u.role.id===r.role.id)));const D=await he(o,i,e),p=D.realmMappings?.map(r=>({role:r}))||[],k=Object.values(D.clientMappings||{}).map(r=>r.mappings.map(u=>({client:{clientId:r.client,...r},role:u}))).flat();return[...Ae([...k,...p],[...C,...c],v)]},[w,x]=ge({titleKey:"removeMappingTitle",messageKey:n("removeMappingConfirm",{count:b.length}),continueButtonLabel:"remove",continueButtonVariant:Z.danger,onCancel:()=>{S([]),y()},onConfirm:async()=>{try{await Promise.all(Re(o,i,e,b)),m(n("roleMappingUpdatedSuccess"),ee.success),S([]),y()}catch(c){h("roleMappingUpdatedError",c)}}});return F(K,{children:[f&&l(Se,{id:e,type:i,name:t,onAssign:B,onClose:()=>A(!1)}),l(x,{}),l(J,{"data-testid":"assigned-roles",loader:q,canSelectAll:!0,onSelect:c=>S(c),searchPlaceholderKey:"searchByName",ariaLabelKey:"roleList",isRowDisabled:c=>c.role.isInherited||!1,toolbarItem:F(K,{children:[l(E,{children:l(ie,{label:n("hideInheritedRoles"),id:"hideInheritedRoles","data-testid":"hideInheritedRoles",isChecked:v,onChange:(c,C)=>{M(C),y()}})}),s&&F(K,{children:[l(E,{children:l($,{"data-testid":"assignRole",onClick:()=>A(!0),children:n("assignRole")})}),l(E,{children:l($,{variant:"link","data-testid":"unAssignRole",onClick:w,isDisabled:b.length===0,children:n("unAssignRole")})})]})]}),actions:s?[{title:n("unAssignRole"),onRowClick:async c=>(S([c]),w(),!1)}]:[],columns:[{name:"role.name",displayKey:"name",transforms:[Q(30)],cellRenderer:G},{name:"role.isInherited",displayKey:"inherent",cellFormatters:[te(),se()]},{name:"role.description",displayKey:"description",cellFormatters:[z(n)]}],emptyState:l(W,{message:n(`noRoles-${i}`),instructions:n(`noRolesInstructions-${i}`),primaryActionText:n("assignRole"),onPrimaryAction:()=>A(!0),secondaryActions:[{text:n("showInheritedRoles"),onClick:()=>{M(!1),y()}}]})},`${e}${d}`)]})},be=({role:t})=>{const{t:e}=L();return l(pe,{wrapModifier:"truncate",children:z(e)(t.description)})},Se=({id:t,name:e,type:i,isRadio:s,onAssign:a,onClose:o,title:n,actionLabel:m})=>{const{adminClient:h}=H(),{t:d}=L(),{hasAccess:T}=ne(),y=T("view-realm")||T("query-users"),[v,M]=R(!1),[f,A]=R("clients"),[b,S]=R([]),[B,q]=R(0),w=()=>q(B+1),x=me(),c=({role:{name:p}})=>p?.toUpperCase(),C=async(p,k,r)=>{const u={first:p,max:k};r&&(u.search=r);const g=await Ce(h,i,{...u,id:t});return x(g,c).map(O=>({role:O.role,id:O.role.id}))},D=async(p,k,r)=>{const u=await ve(h,{id:t,type:i,first:p||0,max:k||10,search:r});return x(u.map(g=>({client:{clientId:g.client,id:g.clientId},role:{id:g.id,name:g.role,description:g.description},id:g.id})),({client:{clientId:g},role:{name:V}})=>`${g}${V}`)};return l(le,{variant:ae.large,title:n||d("assignRolesTo",{client:e}),isOpen:!0,onClose:o,actions:[l($,{"data-testid":"assign",isDisabled:b.length===0,variant:"primary",onClick:()=>{a(b),o()},children:m||d("assign")},"confirm"),l($,{"data-testid":"cancel",variant:"link",onClick:o,children:d("cancel")},"cancel")],children:l(J,{onSelect:p=>S([...p]),searchPlaceholderKey:"searchByRoleName",isPaginated:!(f==="roles"&&i!=="roles"),searchTypeComponent:y&&l(E,{children:l(oe,{onOpenChange:p=>M(p),onSelect:()=>{A(f==="roles"?"clients":"roles"),M(!1),w()},toggle:p=>l(de,{"data-testid":"filter-type-dropdown",ref:p,onClick:()=>M(!v),icon:l(fe,{}),children:d(f==="roles"?"filterByRoles":"filterByClients")}),isOpen:v,children:l(re,{children:l(ce,{"data-testid":f,children:d(f==="roles"?"filterByClients":"filterByRoles")},"filter-type")})})}),canSelectAll:!0,isRadio:s,loader:f==="roles"?C:D,ariaLabelKey:"associatedRolesText",columns:[{name:"name",cellRenderer:G,transforms:[Q(30)]},{name:"role.description",displayKey:"description",cellRenderer:be}],emptyState:l(W,{message:d("noRoles"),instructions:d("noRealmRolesToAssign"),secondaryActions:[{text:d("filterByRoles"),onClick:()=>{A("roles"),w()}}]})},B)})};export{Se as A,Ee as R,G as S,Fe as a,Ke as f};
//# sourceMappingURL=AddRoleMappingModal-FlNvMd3n.js.map
