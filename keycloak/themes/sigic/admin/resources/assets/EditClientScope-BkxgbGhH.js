import{jsx as t,jsxs as h,Fragment as U}from"react/jsx-runtime";import{u as q,a as H,b as Q,d as _,V as $,ak as z,aO as G,j as J,aP as m,B as W,q as d,aQ as X,y as Y,D as Z,P as y,aR as w,aS as ee,p as te}from"./main-Dml5vH_M.js";import{useState as E}from"react";import{C as M,A as ae,c as oe}from"./ClientScopeTypes-DwzbyHD6.js";import{u as ie}from"./ConfirmDialog-BN0phSta.js";import{R as ne}from"./AddRoleMappingModal-FlNvMd3n.js";import{u,R as se}from"./RoutableTabs-D0MTj5jQ.js";import{V as re}from"./ViewHeader-CnGpO8mW.js";import{u as ce}from"./useParams-Cmi1OAEj.js";import{M as pe}from"./MapperList-B-sXYsMv.js";import{S as le}from"./ScopeForm-CcHh9uAf.js";import{A as de}from"./AdminEvents-BQlKf8zR.js";import{a as S,b as f}from"./Tabs-swfKYDgo.js";import"react-dom";import"./translationFormatter-DtFomvax.js";import"./useLocaleSort-DeXbTEE9.js";import"./filter-icon-BO7Evf9d.js";import"./PageHandler-BQ1_55gR.js";import"./DynamicComponents-Cxsqsl9R.js";import"./ClientSelect-DJq4F1jh.js";import"./FileUpload-B3CkDAbJ.js";import"./GroupPickerDialog-eQJqBPQt.js";import"./DataListItemRow-B3J1tfyO.js";import"./KeySelect-Ba6sDuzD.js";import"./MultiLineInput-BnUu5qtj.js";import"./CodeEditor-C7HQ48Ys.js";import"./constants-BclHbWtx.js";import"./utils-C-TUnOch.js";import"./SwitchControl-DVIXTwQM.js";import"./FormAccess-Dgk035ov.js";import"./DropdownPanel-CdQAMxBj.js";import"./useFormatDate-Puc65BKQ.js";import"./DatePicker-CU4S68sS.js";import"./pickBy-BQkB_pck.js";import"./DescriptionListTerm-DCQWux3S.js";function Je(){const{adminClient:r}=q(),{t:o}=H(),C=Q(),{realm:c,realmRepresentation:T}=_(),{id:i}=ce(),{addAlert:p,addError:l}=$(),{enabled:A}=z(),[n,D]=E(),[b,R]=E(0),v=()=>R(b+1),{hasAccess:O}=G();J(async()=>{const e=await r.clientScopes.findOne({id:i});if(!e)throw new Error(o("notFound"));return{...e,type:await P(e)}},e=>{D(e)},[b,i]);async function P(e){return(await r.clientScopes.listDefaultClientScopes()).find(g=>g.name===e.name)?M.default:(await r.clientScopes.listDefaultOptionalClientScopes()).find(g=>g.name===e.name)?M.optional:ae.none}const V=u(m({realm:c,id:i,tab:"settings"})),x=u(m({realm:c,id:i,tab:"mappers"})),I=u(m({realm:c,id:i,tab:"scope"})),B=u(m({realm:c,id:i,tab:"events"})),j=async e=>{const a=te({...e,name:e.name?.trim().replace(/ /g,"_")});try{await r.clientScopes.update({id:i},a),await oe(r,{...a,id:i},a.type),p(o("updateSuccessClientScope"),d.success)}catch(s){l("updateErrorClientScope",s)}},[k,F]=ie({titleKey:o("deleteClientScope",{count:1,name:n?.name}),messageKey:"deleteConfirmClientScopes",continueButtonLabel:"delete",continueButtonVariant:W.danger,onConfirm:async()=>{try{await r.clientScopes.del({id:i}),p(o("deletedSuccessClientScope"),d.success),C(X({realm:c}))}catch(e){l("deleteErrorClientScope",e)}}}),K=async e=>{try{const a=e.filter(s=>s.client===void 0).map(s=>s.role).flat();await r.clientScopes.addRealmScopeMappings({id:i},a),await Promise.all(e.filter(s=>s.client!==void 0).map(s=>r.clientScopes.addClientScopeMappings({id:i,client:s.client.id},[s.role]))),p(o("roleMappingUpdatedSuccess"),d.success)}catch(a){l("roleMappingUpdatedError",a)}},L=async e=>{if(Array.isArray(e))try{await r.clientScopes.addMultipleProtocolMappers({id:n.id},e),v(),p(o("mappingCreatedSuccess"),d.success)}catch(a){l("mappingCreatedError",a)}else{const a=e;C(w({realm:c,id:n.id,mapperId:a.id,viewMode:"new"}))}},N=async e=>{try{await r.clientScopes.delProtocolMapper({id:n.id,mapperId:e.id}),p(o("mappingDeletedSuccess"),d.success),v()}catch(a){l("mappingDeletedError",a)}return!0};return n?h(U,{children:[t(F,{}),t(re,{titleKey:n.name,dropdownItems:[t(Z,{onClick:k,children:o("delete")},"delete")],badges:[{text:n.protocol}],divider:!1}),t(y,{variant:"light",className:"pf-v5-u-p-0",children:h(se,{isBox:!0,mountOnEnter:!0,unmountOnExit:!0,children:[t(S,{id:"settings","data-testid":"settings",title:t(f,{children:o("settings")}),...V,children:t(y,{variant:"light",children:t(le,{save:j,clientScope:n})})}),t(S,{id:"mappers","data-testid":"mappers",title:t(f,{children:o("mappers")}),...x,children:t(pe,{model:n,onAdd:L,onDelete:N,detailLink:e=>w({realm:c,id:n.id,mapperId:e,viewMode:"edit"})})}),h(S,{id:"scope","data-testid":"scopeTab",title:t(f,{children:o("scope")}),...I,children:[A&&t(y,{children:t(ee,{variant:"info",isInline:!0,title:o("clientScopesRolesScope"),component:"h2"})}),t(ne,{id:n.id,name:n.name,type:"clientScopes",save:K})]}),T?.adminEventsEnabled&&O("view-events")&&t(S,{"data-testid":"admin-events-tab",title:t(f,{children:o("adminEvents")}),...B,children:t(de,{resourcePath:`*client-scopes/${i}`})})]})})]}):t(Y,{})}export{Je as default};
//# sourceMappingURL=EditClientScope-BkxgbGhH.js.map
