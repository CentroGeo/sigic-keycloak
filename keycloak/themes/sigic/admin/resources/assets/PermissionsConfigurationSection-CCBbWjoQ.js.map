{"version":3,"file":"PermissionsConfigurationSection-CCBbWjoQ.js","sources":["../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.14_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/Label/LabelGroup.js","../../../../../../../src/permissions-configuration/permission-configuration/AuthorizationScopesDetails.tsx","../../../../../../../src/permissions-configuration/resource-types/SearchDropdown.tsx","../../../../../../../src/permissions-configuration/permission-configuration/NewPermissionConfigurationDialog.tsx","../../../../../../../src/permissions-configuration/permission-configuration/PermissionsConfigurationTab.tsx","../../../../../../../src/permissions-configuration/permission-evaluation/PermissionEvaluationResult.tsx","../../../../../../../src/permissions-configuration/permission-evaluation/PermissionsEvaluationTab.tsx","../../../../../../../src/permissions-configuration/PermissionsConfigurationSection.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport * as React from 'react';\nimport styles from '@patternfly/react-styles/css/components/Label/label-group.mjs';\nimport labelStyles from '@patternfly/react-styles/css/components/Label/label.mjs';\nimport { css } from '@patternfly/react-styles';\nimport { Button } from '../Button';\nimport { Label } from './Label';\nimport { Tooltip } from '../Tooltip';\nimport TimesCircleIcon from '@patternfly/react-icons/dist/esm/icons/times-circle-icon';\nimport { fillTemplate } from '../../helpers';\nimport { GenerateId } from '../../helpers/GenerateId/GenerateId';\nclass LabelGroup extends React.Component {\n    constructor(props) {\n        super(props);\n        this.headingRef = React.createRef();\n        this.toggleCollapse = () => {\n            this.setState((prevState) => ({\n                isOpen: !prevState.isOpen,\n                isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n            }));\n        };\n        this.state = {\n            isOpen: this.props.defaultIsOpen,\n            isTooltipVisible: false\n        };\n    }\n    componentDidMount() {\n        this.setState({\n            isTooltipVisible: Boolean(this.headingRef.current && this.headingRef.current.offsetWidth < this.headingRef.current.scrollWidth)\n        });\n    }\n    renderLabel(id) {\n        const { categoryName, tooltipPosition } = this.props;\n        const { isTooltipVisible } = this.state;\n        return isTooltipVisible ? (React.createElement(Tooltip, { position: tooltipPosition, content: categoryName },\n            React.createElement(\"span\", { tabIndex: 0, ref: this.headingRef, className: css(styles.labelGroupLabel) },\n                React.createElement(\"span\", { \"aria-hidden\": \"true\", id: id }, categoryName)))) : (React.createElement(\"span\", { ref: this.headingRef, className: css(styles.labelGroupLabel), \"aria-hidden\": \"true\", id: id }, categoryName));\n    }\n    render() {\n        const _a = this.props, { categoryName, children, className, isClosable, isCompact, closeBtnAriaLabel, 'aria-label': ariaLabel, onClick, numLabels, expandedText, collapsedText, \n        /* eslint-disable @typescript-eslint/no-unused-vars */\n        defaultIsOpen, tooltipPosition, isVertical, isEditable, hasEditableTextArea, editableTextAreaProps, addLabelControl } = _a, \n        /* eslint-enable @typescript-eslint/no-unused-vars */\n        rest = __rest(_a, [\"categoryName\", \"children\", \"className\", \"isClosable\", \"isCompact\", \"closeBtnAriaLabel\", 'aria-label', \"onClick\", \"numLabels\", \"expandedText\", \"collapsedText\", \"defaultIsOpen\", \"tooltipPosition\", \"isVertical\", \"isEditable\", \"hasEditableTextArea\", \"editableTextAreaProps\", \"addLabelControl\"]);\n        const { isOpen } = this.state;\n        const renderedChildren = React.Children.toArray(children);\n        const numChildren = renderedChildren.length;\n        const collapsedTextResult = fillTemplate(collapsedText, {\n            remaining: numChildren - numLabels\n        });\n        const renderLabelGroup = (id) => {\n            const labelArray = !isOpen ? renderedChildren.slice(0, numLabels) : renderedChildren;\n            const content = (React.createElement(React.Fragment, null,\n                categoryName && this.renderLabel(id),\n                React.createElement(\"ul\", Object.assign({ className: css(styles.labelGroupList) }, (categoryName && { 'aria-labelledby': id }), (!categoryName && { 'aria-label': ariaLabel }), { role: \"list\" }, rest),\n                    labelArray.map((child, i) => (React.createElement(\"li\", { className: css(styles.labelGroupListItem), key: i }, child))),\n                    numChildren > numLabels && (React.createElement(\"li\", { className: css(styles.labelGroupListItem) },\n                        React.createElement(Label, { isOverflowLabel: true, onClick: this.toggleCollapse, className: css(isCompact && labelStyles.modifiers.compact) }, isOpen ? expandedText : collapsedTextResult))),\n                    addLabelControl && React.createElement(\"li\", { className: css(styles.labelGroupListItem) }, addLabelControl),\n                    isEditable && hasEditableTextArea && (React.createElement(\"li\", { className: css(styles.labelGroupListItem, styles.modifiers.textarea) },\n                        React.createElement(\"textarea\", Object.assign({ className: css(styles.labelGroupTextarea), rows: 1, tabIndex: 0 }, editableTextAreaProps)))))));\n            const close = (React.createElement(\"div\", { className: css(styles.labelGroupClose) },\n                React.createElement(Button, { variant: \"plain\", \"aria-label\": closeBtnAriaLabel, onClick: onClick, id: `remove_group_${id}`, \"aria-labelledby\": `remove_group_${id} ${id}` },\n                    React.createElement(TimesCircleIcon, { \"aria-hidden\": \"true\" }))));\n            return (React.createElement(\"div\", { className: css(styles.labelGroup, className, categoryName && styles.modifiers.category, isVertical && styles.modifiers.vertical, isEditable && styles.modifiers.editable) },\n                React.createElement(\"div\", { className: css(styles.labelGroupMain) }, content),\n                isClosable && close));\n        };\n        return numChildren === 0 && addLabelControl === undefined ? null : (React.createElement(GenerateId, null, (randomId) => renderLabelGroup(this.props.id || randomId)));\n    }\n}\nLabelGroup.displayName = 'LabelGroup';\nLabelGroup.defaultProps = {\n    expandedText: 'Show Less',\n    collapsedText: '${remaining} more',\n    categoryName: '',\n    defaultIsOpen: false,\n    numLabels: 3,\n    isClosable: false,\n    isCompact: false,\n    onClick: (_e) => undefined,\n    closeBtnAriaLabel: 'Close label group',\n    tooltipPosition: 'top',\n    'aria-label': 'Label group category',\n    isVertical: false,\n    isEditable: false,\n    hasEditableTextArea: false\n};\nexport { LabelGroup };\n//# sourceMappingURL=LabelGroup.js.map","import { useTranslation } from \"react-i18next\";\nimport { capitalize } from \"lodash-es\";\nimport {\n  Label,\n  LabelGroup,\n  Popover,\n  Text,\n  TextContent,\n  TextList,\n  TextListItem,\n  TextListItemVariants,\n  TextListVariants,\n} from \"@patternfly/react-core\";\n\ntype AuthorizationScopesDetailsProps = {\n  row: {\n    resourceType: string;\n    associatedScopes?: { name: string }[];\n  };\n};\n\nexport const AuthorizationScopesDetails = ({\n  row,\n}: AuthorizationScopesDetailsProps) => {\n  const { t } = useTranslation();\n\n  const associatedScopes = row.associatedScopes || [];\n\n  return (\n    <LabelGroup>\n      {associatedScopes.map((scope, index) => (\n        <Popover\n          key={index}\n          aria-label={`Authorization scope popover for ${scope.name}`}\n          position=\"top\"\n          hasAutoWidth\n          bodyContent={\n            <TextContent>\n              <Text className=\"pf-v5-u-font-size-md pf-v5-u-font-weight-bold\">\n                {t(\"authorizationScopeDetailsTitle\")}\n              </Text>\n              <Text className=\"pf-v5-u-font-size-sm\">\n                {t(\"authorizationScopeDetailsSubtitle\")}\n              </Text>\n              <TextList\n                component={TextListVariants.dl}\n                className=\"pf-v5-u-font-size-sm\"\n              >\n                <TextListItem component={TextListItemVariants.dt}>\n                  {t(\"authorizationScopeDetailsName\")}\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dd}>\n                  {capitalize(scope.name)}\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dt}>\n                  {t(\"authorizationScopeDetailsDescription\")}\n                </TextListItem>\n                <TextListItem component={TextListItemVariants.dd}>\n                  {\" \"}\n                  {t(`authorizationScope.${row.resourceType}.${scope.name}`)}\n                </TextListItem>\n              </TextList>\n            </TextContent>\n          }\n        >\n          <Label color=\"blue\">{capitalize(scope.name)}</Label>\n        </Popover>\n      ))}\n    </LabelGroup>\n  );\n};\n","import PolicyRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/policyRepresentation\";\nimport UserRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/userRepresentation\";\nimport { SelectControl, TextControl } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  Button,\n  Dropdown,\n  Form,\n  MenuToggle,\n} from \"@patternfly/react-core\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport useToggle from \"../../utils/useToggle\";\nimport { ResourceType } from \"./ResourceType\";\n\nexport type SearchForm = {\n  name?: string;\n  resources?: string;\n  scope?: string;\n  type?: string;\n  uri?: string;\n  owner?: string;\n  resourceType?: string;\n};\n\ntype SearchDropdownProps = {\n  resources?: UserRepresentation[];\n  types: PolicyRepresentation[];\n  search: SearchForm;\n  onSearch: (form: SearchForm) => void;\n  resourceType?: string;\n};\n\nexport const SearchDropdown = ({\n  types,\n  search,\n  onSearch,\n}: SearchDropdownProps) => {\n  const { t } = useTranslation();\n  const form = useForm<SearchForm>({\n    mode: \"onChange\",\n    defaultValues: search,\n  });\n\n  const {\n    reset,\n    formState: { isDirty },\n    handleSubmit,\n  } = form;\n\n  const [open, toggle] = useToggle();\n  const [resourceScopes, setResourceScopes] = useState<string[]>([]);\n  const selectedType = useWatch({\n    control: form.control,\n    name: \"resourceType\",\n    defaultValue: \"\",\n  });\n  const [key, setKey] = useState(0);\n  const ref = useRef(\"clients\");\n\n  const submit = (form: SearchForm) => {\n    toggle();\n    onSearch(form);\n  };\n\n  useEffect(() => {\n    const type = types?.find((item) => item.type === selectedType);\n    setResourceScopes(type?.scopes || []);\n  }, [selectedType, types]);\n\n  useEffect(() => {\n    reset(search);\n    setKey((prevKey) => prevKey + 1);\n  }, [search]);\n\n  return (\n    <Dropdown\n      toggle={(ref) => (\n        <MenuToggle\n          data-testid=\"searchdropdown_dorpdown\"\n          ref={ref}\n          onClick={toggle}\n          className=\"keycloak__client_authentication__searchdropdown\"\n        >\n          {t(\"searchClientAuthorizationPermission\")}\n        </MenuToggle>\n      )}\n      isOpen={open}\n    >\n      <FormProvider {...form}>\n        <Form\n          key={key}\n          isHorizontal\n          className=\"keycloak__client_authentication__searchdropdown_form\"\n          onSubmit={handleSubmit(submit)}\n        >\n          <TextControl name=\"name\" label={t(\"name\")} />\n          <SelectControl\n            name=\"resourceType\"\n            label={t(\"type\")}\n            controller={{\n              defaultValue: \"\",\n            }}\n            options={[\n              { key: \"\", value: t(\"choose\") },\n              ...types.map(({ type, name }) => ({\n                key: type!,\n                value: name! || type!,\n              })),\n            ]}\n            onSelect={(value, onChange) => {\n              if (ref.current !== value) {\n                ref.current = value as string;\n                form.setValue(\"resources\", undefined);\n              }\n              onChange(value);\n            }}\n          />\n          {selectedType !== \"\" && (\n            <>\n              <ResourceType\n                resourceType={selectedType || \"clients\"}\n                withEnforceAccessTo={false}\n              />\n              <SelectControl\n                name={\"scope\"}\n                label={t(\"authorizationScope\")}\n                controller={{\n                  defaultValue: \"\",\n                }}\n                options={[\n                  ...(resourceScopes || []).map((resourceScope) => ({\n                    key: resourceScope!,\n                    value: resourceScope!,\n                  })),\n                ]}\n              />\n            </>\n          )}\n\n          <ActionGroup>\n            <Button\n              variant=\"primary\"\n              type=\"submit\"\n              data-testid=\"search-btn\"\n              isDisabled={!isDirty}\n            >\n              {t(\"search\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              data-testid=\"revert-btn\"\n              onClick={() => {\n                reset({});\n                onSearch({});\n              }}\n            >\n              {t(\"clear\")}\n            </Button>\n          </ActionGroup>\n        </Form>\n      </FormProvider>\n    </Dropdown>\n  );\n};\n","import { ResourceTypesRepresentation } from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport { useTranslation } from \"react-i18next\";\nimport {\n  Modal,\n  ModalVariant,\n  TextContent,\n  Text,\n  TextVariants,\n  Alert,\n} from \"@patternfly/react-core\";\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\n\ntype NewPermissionConfigurationDialogProps = {\n  resourceTypes?: ResourceTypesRepresentation[];\n  toggleDialog: () => void;\n  onSelect: (resourceType: ResourceTypesRepresentation) => void;\n};\n\nexport const NewPermissionConfigurationDialog = ({\n  resourceTypes,\n  onSelect,\n  toggleDialog,\n}: NewPermissionConfigurationDialogProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <Modal\n      aria-label={t(\"createPermission\")}\n      variant={ModalVariant.medium}\n      header={\n        <TextContent>\n          <Text component={TextVariants.h1}>{t(\"chooseAResourceType\")}</Text>\n          <Alert\n            variant=\"info\"\n            isInline\n            title={t(\"chooseAResourceTypeInstructions\")}\n            component=\"p\"\n          />\n        </TextContent>\n      }\n      isOpen\n      onClose={toggleDialog}\n    >\n      <Table aria-label={t(\"permissions\")} variant=\"compact\">\n        <Thead>\n          <Tr>\n            <Th>{t(\"resourceType\")}</Th>\n            <Th>{t(\"description\")}</Th>\n          </Tr>\n        </Thead>\n        <Tbody>\n          {Object.keys(resourceTypes || {}).map((key: any) => {\n            const resourceType = resourceTypes![key];\n            return (\n              <Tr\n                key={resourceType.type}\n                data-testid={resourceType.type}\n                onRowClick={() => {\n                  onSelect(resourceType);\n                }}\n                isClickable\n              >\n                <Td>{resourceType.type}</Td>\n                <Td style={{ textWrap: \"wrap\" }}>\n                  {t(`resourceType.${resourceType.type}`)}\n                </Td>\n              </Tr>\n            );\n          })}\n        </Tbody>\n      </Table>\n    </Modal>\n  );\n};\n","import type PolicyRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/policyRepresentation\";\nimport ResourceRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceRepresentation\";\nimport ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport {\n  KeycloakSpinner,\n  ListEmptyState,\n  PaginatingTableToolbar,\n  useAlerts,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  AlertVariant,\n  Button,\n  ButtonVariant,\n  PageSection,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport {\n  ExpandableRowContent,\n  Table,\n  Tbody,\n  Td,\n  Th,\n  Thead,\n  Tr,\n} from \"@patternfly/react-table\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { useConfirmDialog } from \"../../components/confirm-dialog/ConfirmDialog\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport useSortedResourceTypes from \"../../utils/useSortedResourceTypes\";\nimport useToggle from \"../../utils/useToggle\";\nimport { AuthorizationScopesDetails } from \"../permission-configuration/AuthorizationScopesDetails\";\nimport { SearchDropdown, SearchForm } from \"../resource-types/SearchDropdown\";\nimport { toCreatePermissionConfiguration } from \"../routes/NewPermissionConfiguration\";\nimport { toPermissionConfigurationDetails } from \"../routes/PermissionConfigurationDetails\";\nimport { NewPermissionConfigurationDialog } from \"./NewPermissionConfigurationDialog\";\n\ntype PermissionsConfigurationProps = {\n  clientId: string;\n};\n\ntype ExpandablePolicyRepresentation = PolicyRepresentation & {\n  policies?: PolicyRepresentation[];\n  resources?: ResourceRepresentation[];\n  scopes?: ScopeRepresentation[];\n  isExpanded: boolean;\n};\n\nexport const PermissionsConfigurationTab = ({\n  clientId,\n}: PermissionsConfigurationProps) => {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { addAlert, addError } = useAlerts();\n  const { realm } = useRealm();\n  const [permissions, setPermissions] =\n    useState<ExpandablePolicyRepresentation[]>();\n  const [selectedPermission, setSelectedPermission] =\n    useState<PolicyRepresentation>();\n  const [search, setSearch] = useState<SearchForm>({});\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n  const [max, setMax] = useState(10);\n  const [first, setFirst] = useState(0);\n  const [newDialog, toggleDialog] = useToggle();\n  const resourceTypes = useSortedResourceTypes({ clientId });\n\n  useFetch(\n    async () => {\n      const permissions = await adminClient.clients.listPermissionScope({\n        first,\n        max: max + 1,\n        id: clientId,\n        ...search,\n      });\n\n      const processedPermissions = await Promise.all(\n        (permissions || []).map(async (permission) => {\n          const policies = await adminClient.clients.getAssociatedPolicies({\n            id: clientId,\n            permissionId: permission.id!,\n          });\n\n          const scopes = await adminClient.clients.getAssociatedScopes({\n            id: clientId,\n            permissionId: permission.id!,\n          });\n\n          const resources = await adminClient.clients.getAssociatedResources({\n            id: clientId,\n            permissionId: permission.id!,\n          });\n\n          return {\n            ...permission,\n            policies,\n            scopes,\n            resources,\n            isExpanded: false,\n          };\n        }),\n      );\n\n      return processedPermissions;\n    },\n    (permissions) => {\n      setPermissions(permissions as any[]);\n    },\n    [key, search, first, max],\n  );\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deletePermission\",\n    messageKey: t(\"deleteAdminPermissionConfirm\", {\n      permission: selectedPermission?.name,\n    }),\n    continueButtonVariant: ButtonVariant.danger,\n    continueButtonLabel: \"confirm\",\n    onConfirm: async () => {\n      try {\n        await adminClient.clients.delPermission({\n          id: clientId,\n          type: selectedPermission?.type!,\n          permissionId: selectedPermission?.id!,\n        });\n        addAlert(t(\"permissionDeletedSuccess\"), AlertVariant.success);\n        refresh();\n      } catch (error) {\n        addError(\"permissionDeletedError\", error);\n      }\n    },\n  });\n\n  if (!permissions) {\n    return <KeycloakSpinner />;\n  }\n\n  const noData = permissions.length === 0;\n  const searching = Object.keys(search).length !== 0;\n  return (\n    <PageSection variant=\"light\" className=\"pf-v5-u-p-0\">\n      <DeleteConfirm />\n      {(!noData || searching) && (\n        <>\n          {newDialog && (\n            <NewPermissionConfigurationDialog\n              resourceTypes={resourceTypes}\n              onSelect={(resourceType) =>\n                navigate(\n                  toCreatePermissionConfiguration({\n                    realm,\n                    permissionClientId: clientId,\n                    resourceType: resourceType.type!,\n                  }),\n                )\n              }\n              toggleDialog={toggleDialog}\n            />\n          )}\n          <PaginatingTableToolbar\n            count={permissions.length}\n            first={first}\n            max={max}\n            onNextClick={setFirst}\n            onPreviousClick={setFirst}\n            onPerPageSelect={(first, max) => {\n              setFirst(first);\n              setMax(max);\n            }}\n            toolbarItem={\n              <>\n                <ToolbarItem>\n                  <SearchDropdown\n                    types={resourceTypes}\n                    search={search}\n                    onSearch={setSearch}\n                  />\n                </ToolbarItem>\n                <ToolbarItem>\n                  <Button\n                    data-testid=\"createScopeBasedPermissionBtn\"\n                    key=\"confirm\"\n                    variant=\"primary\"\n                    onSelect={(resourceType) =>\n                      navigate(\n                        toCreatePermissionConfiguration({\n                          realm,\n                          permissionClientId: clientId,\n                          resourceType: resourceType.type!,\n                        }),\n                      )\n                    }\n                    onClick={toggleDialog}\n                  >\n                    {t(\"createPermission\")}\n                  </Button>\n                </ToolbarItem>\n              </>\n            }\n          >\n            {!noData && (\n              <Table aria-label={t(\"permissions\")} variant=\"compact\">\n                <Thead>\n                  <Tr>\n                    <Th aria-hidden=\"true\" />\n                    <Th>{t(\"adminPermissionName\")}</Th>\n                    <Th>{t(\"resourceType\")}</Th>\n                    <Th>{t(\"authorizationScopes\")}</Th>\n                    <Th>{t(\"description\")}</Th>\n                    <Th aria-hidden=\"true\" />\n                  </Tr>\n                </Thead>\n                {permissions.map((permission, rowIndex) => (\n                  <Tbody key={permission.id} isExpanded={permission.isExpanded}>\n                    <Tr>\n                      <Td\n                        expand={{\n                          rowIndex,\n                          isExpanded: permission.isExpanded,\n                          onToggle: (_, rowIndex) => {\n                            const rows = permissions.map((p, index) =>\n                              index === rowIndex\n                                ? { ...p, isExpanded: !p.isExpanded }\n                                : p,\n                            );\n                            setPermissions(rows);\n                          },\n                        }}\n                      />\n                      <Td data-testid={`name-column-${permission.name}`}>\n                        <Link\n                          to={toPermissionConfigurationDetails({\n                            realm,\n                            permissionClientId: clientId,\n                            permissionId: permission.id!,\n                            resourceType: permission.resourceType!,\n                          })}\n                        >\n                          {permission.name}\n                        </Link>\n                      </Td>\n                      <Td>{permission.resourceType}</Td>\n                      <Td>\n                        <AuthorizationScopesDetails\n                          row={{\n                            resourceType: permission.resourceType || \"\",\n                            associatedScopes: permission.scopes?.map(\n                              (scope: ScopeRepresentation) => ({\n                                name: scope.name || \"\",\n                              }),\n                            ),\n                          }}\n                        />\n                      </Td>\n                      <Td>{permission.description || \"—\"}</Td>\n                      <Td\n                        actions={{\n                          items: [\n                            {\n                              title: t(\"delete\"),\n                              onClick: async () => {\n                                setSelectedPermission(permission);\n                                toggleDeleteDialog();\n                              },\n                            },\n                          ],\n                        }}\n                      ></Td>\n                    </Tr>\n                    <Tr\n                      key={`child-${permission.id}`}\n                      isExpanded={permission.isExpanded}\n                    >\n                      <Td />\n                      <Td colSpan={5}>\n                        <ExpandableRowContent>\n                          {permission.isExpanded && (\n                            <>\n                              <Th>{t(\"resources\")}</Th>\n                              {permission.resources &&\n                              permission.resources?.length > 0 ? (\n                                permission.resources!.map(\n                                  (resource: ResourceRepresentation, index) => (\n                                    <Td key={index}>\n                                      <span style={{ marginLeft: \"8px\" }}>\n                                        {resource.displayName || resource.name}\n                                      </span>\n                                    </Td>\n                                  ),\n                                )\n                              ) : (\n                                <Td>\n                                  <span style={{ marginLeft: \"8px\" }}>\n                                    {t(\"allResources\")}\n                                  </span>\n                                </Td>\n                              )}\n                              <br />\n                              <Th>{t(\"assignedPolicies\")}</Th>\n                              {permission.policies!.map(\n                                (policy: PolicyRepresentation, index) => (\n                                  <Td key={index}>\n                                    <span style={{ marginLeft: \"8px\" }}>\n                                      {policy.name}\n                                    </span>\n                                  </Td>\n                                ),\n                              )}\n                            </>\n                          )}\n                        </ExpandableRowContent>\n                      </Td>\n                    </Tr>\n                  </Tbody>\n                ))}\n              </Table>\n            )}\n          </PaginatingTableToolbar>\n        </>\n      )}\n      {noData && !searching && (\n        <>\n          {newDialog && (\n            <NewPermissionConfigurationDialog\n              resourceTypes={resourceTypes}\n              onSelect={(resourceType) =>\n                navigate(\n                  toCreatePermissionConfiguration({\n                    realm,\n                    permissionClientId: clientId,\n                    resourceType: resourceType.type!,\n                  }),\n                )\n              }\n              toggleDialog={toggleDialog}\n            />\n          )}\n          <ListEmptyState\n            message={t(\"emptyPermissions\")}\n            instructions={t(\"emptyPermissionsInstructions\")}\n            primaryActionText={t(\"createPermission\")}\n            onPrimaryAction={toggleDialog}\n          />\n        </>\n      )}\n      {noData && searching && (\n        <ListEmptyState\n          isSearchVariant\n          message={t(\"noSearchResults\")}\n          instructions={t(\"noPermissionSearchResultsInstructions\")}\n        />\n      )}\n    </PageSection>\n  );\n};\n","import PolicyEvaluationResponse from \"@keycloak/keycloak-admin-client/lib/defs/policyEvaluationResponse\";\nimport { useMemo } from \"react\";\nimport { Alert, List, ListItem, Text } from \"@patternfly/react-core\";\nimport { useTranslation } from \"react-i18next\";\nimport { sortBy } from \"lodash-es\";\n\ntype PermissionEvaluationResultProps = {\n  evaluateResult: PolicyEvaluationResponse;\n};\n\nexport const PermissionEvaluationResult = ({\n  evaluateResult,\n}: PermissionEvaluationResultProps) => {\n  const { t } = useTranslation();\n  const evaluatedResults = evaluateResult?.results || [];\n  const evaluatedResult = evaluatedResults[0] || {};\n  const alertTitle =\n    evaluatedResult?.resource?.name ?? t(\"permissionEvaluationAlertTitle\");\n  const alertVariant =\n    evaluateResult?.status === \"PERMIT\" ? \"success\" : \"warning\";\n\n  const evaluatedAllowedScopes = useMemo(\n    () => sortBy(evaluatedResult?.allowedScopes || [], \"name\"),\n    [evaluatedResult],\n  );\n  const evaluatedDeniedScopes = useMemo(\n    () => sortBy(evaluatedResult?.deniedScopes || [], \"name\"),\n    [evaluatedResult],\n  );\n  const evaluatedPolicies = useMemo(\n    () => sortBy(evaluatedResult?.policies || [], \"name\"),\n    [evaluatedResult],\n  );\n\n  const evaluatedPermission = function (title: string, status: string) {\n    const permissions = evaluatedPolicies.filter((p) => p.status === status);\n\n    if (permissions.length == 0) {\n      return;\n    }\n\n    return (\n      <>\n        <Text className=\"pf-v5-u-pt-sm\">\n          <strong>{t(title)}</strong>:\n        </Text>\n        <List className=\"pf-v5-u-mt-sm\">\n          {permissions.map((p) => (\n            <ListItem key={p.policy?.id}>\n              {t(\"evaluatedPolicy\", {\n                name: p.policy?.name,\n                status: p.status,\n              })}\n            </ListItem>\n          ))}\n        </List>\n      </>\n    );\n  };\n\n  return (\n    <Alert isInline variant={alertVariant} title={alertTitle} component=\"h6\">\n      {evaluatedAllowedScopes.length > 0 && (\n        <>\n          <Text>\n            <b>{t(\"grantedScope\")}</b>\n          </Text>\n          <List className=\"pf-v5-u-mt-sm\">\n            {evaluatedAllowedScopes.map((scope) => (\n              <ListItem key={scope.id}>{scope.name}</ListItem>\n            ))}\n          </List>\n        </>\n      )}\n\n      {evaluatedDeniedScopes.length > 0 && (\n        <>\n          <Text className=\"pf-v5-u-pt-sm\">\n            <strong>{t(\"deniedScope\")}</strong>\n          </Text>\n\n          <List className=\"pf-v5-u-mt-sm\">\n            {evaluatedDeniedScopes.map((scope) => (\n              <ListItem key={scope.id}>{scope.name}</ListItem>\n            ))}\n          </List>\n        </>\n      )}\n\n      {evaluatedPermission(\"grantedPermissions\", \"PERMIT\")}\n      {evaluatedPermission(\"deniedPermissions\", \"DENY\")}\n    </Alert>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport type EvaluationResultRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/evaluationResultRepresentation\";\nimport PolicyEvaluationResponse from \"@keycloak/keycloak-admin-client/lib/defs/policyEvaluationResponse\";\nimport type ResourceEvaluation from \"@keycloak/keycloak-admin-client/lib/defs/resourceEvaluation\";\nimport {\n  ListEmptyState,\n  SelectControl,\n  useAlerts,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  Alert,\n  AlertActionCloseButton,\n  Button,\n  PageSection,\n  Panel,\n  PanelHeader,\n  PanelMainBody,\n  Split,\n  SplitItem,\n  Title,\n} from \"@patternfly/react-core\";\nimport { BellIcon } from \"@patternfly/react-icons\";\nimport { useMemo, useState } from \"react\";\nimport { FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { UserSelect } from \"../../components/users/UserSelect\";\nimport { useAccess } from \"../../context/access/Access\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { ForbiddenSection } from \"../../ForbiddenSection\";\nimport useSortedResourceTypes from \"../../utils/useSortedResourceTypes\";\nimport { PermissionEvaluationResult } from \"./PermissionEvaluationResult\";\nimport { COMPONENTS } from \"../resource-types/ResourceType\";\n\ninterface EvaluateFormInputs\n  extends Omit<ResourceEvaluation, \"context\" | \"resources\"> {\n  authScopes: string[];\n  user: string[];\n  clients: string[];\n  groups: string[];\n  users: string[];\n  roles: string[];\n  resourceType?: string;\n}\n\ntype Props = {\n  client: ClientRepresentation;\n  save: () => void;\n} & EvaluationResultRepresentation;\n\nexport const PermissionsEvaluationTab = (props: Props) => {\n  const { hasAccess } = useAccess();\n\n  if (!hasAccess(\"view-users\")) {\n    return <ForbiddenSection permissionNeeded=\"view-users\" />;\n  }\n\n  return <PermissionEvaluateContent {...props} />;\n};\n\nconst PermissionEvaluateContent = ({ client }: Props) => {\n  const { t } = useTranslation();\n  const { adminClient } = useAdminClient();\n  const realm = useRealm();\n  const { addError } = useAlerts();\n  const form = useForm<EvaluateFormInputs>({\n    mode: \"onChange\",\n    defaultValues: {\n      user: [],\n      resourceType: \"\",\n      authScopes: [],\n    },\n  });\n  const { control, getValues, reset, trigger } = form;\n  const [evaluateResult, setEvaluateResult] =\n    useState<PolicyEvaluationResponse>();\n  const [isAlertOpened, setIsAlertOpened] = useState(true);\n  const [isEvaluated, setIsEvaluated] = useState(false);\n  const resourceTypes = useSortedResourceTypes({ clientId: client.id! });\n\n  const selectedResourceType = useWatch({\n    control: control,\n    name: \"resourceType\",\n    defaultValue: \"\",\n  });\n\n  const authScopes = useMemo(() => {\n    const resource = resourceTypes.find((r) => r.type === selectedResourceType);\n    return resource?.scopes || [];\n  }, [selectedResourceType, resourceTypes]);\n\n  const ResourceTypeComponent =\n    COMPONENTS[selectedResourceType?.toLowerCase() || \"\"];\n\n  const evaluate = async () => {\n    if (!(await trigger())) {\n      return;\n    }\n\n    const formValues = getValues();\n    const getResourceName = (resourceType: string) => {\n      switch (resourceType) {\n        case \"Groups\":\n          return formValues.groups?.[0];\n        case \"Users\":\n          return formValues.users?.[0];\n        case \"Clients\":\n          return formValues.clients?.[0];\n        case \"Roles\":\n          return formValues.roles?.[0];\n        default:\n          return undefined;\n      }\n    };\n\n    const resourceName = getResourceName(formValues.resourceType!);\n\n    const resEval: ResourceEvaluation = {\n      roleIds: formValues.roleIds ?? [],\n      userId: formValues.user![0],\n      resourceType: formValues.resourceType,\n      resources: [\n        {\n          name: resourceName,\n          scopes: formValues.authScopes!.map((scope) => ({ name: scope })),\n        },\n      ],\n      entitlements: false,\n      context: {\n        attributes: {},\n      },\n    };\n\n    try {\n      const evaluation = await adminClient.clients.evaluateResource(\n        { id: client.id!, realm: realm.realm },\n        resEval,\n      );\n\n      setEvaluateResult(evaluation);\n      setIsEvaluated(true);\n    } catch (error) {\n      addError(\"evaluateError\", error);\n    }\n  };\n\n  return (\n    <PageSection>\n      <Split hasGutter>\n        <SplitItem>\n          <FormProvider {...form}>\n            <Panel>\n              <PanelMainBody style={{ width: \"50rem\" }}>\n                <FormAccess isHorizontal role=\"view-clients\">\n                  {isAlertOpened && (\n                    <Alert\n                      variant=\"info\"\n                      isInline\n                      title={t(\"permissionsEvaluationInstructions\")}\n                      component=\"p\"\n                      actionClose={\n                        <AlertActionCloseButton\n                          onClose={() => setIsAlertOpened(false)}\n                        />\n                      }\n                    />\n                  )}\n                  <UserSelect\n                    name=\"user\"\n                    label={t(\"user\")}\n                    helpText={t(\"selectUser\")}\n                    defaultValue={[]}\n                    variant=\"typeahead\"\n                    isRequired\n                  />\n                  <SelectControl\n                    name=\"resourceType\"\n                    label={t(\"resourceType\")}\n                    labelIcon={t(\"resourceTypeSelectHelp\")}\n                    variant=\"single\"\n                    controller={{\n                      defaultValue: resourceTypes.length\n                        ? resourceTypes[0]?.type\n                        : \"\",\n                      rules: { required: true },\n                    }}\n                    options={resourceTypes.map((resource) => resource.type!)}\n                  />\n                  {ResourceTypeComponent && (\n                    <ResourceTypeComponent\n                      name={selectedResourceType?.toLowerCase()}\n                      label={t(`${selectedResourceType}`)}\n                      helpText={t(`select${selectedResourceType}`)}\n                      defaultValue={[]}\n                      variant=\"typeahead\"\n                      isRequired\n                      isRadio\n                    />\n                  )}\n                  <SelectControl\n                    name=\"authScopes\"\n                    label={t(\"authScope\")}\n                    labelIcon={t(\"authScopeSelectHelp\")}\n                    controller={{ defaultValue: [] }}\n                    variant=\"single\"\n                    options={authScopes}\n                  />\n                </FormAccess>\n              </PanelMainBody>\n            </Panel>\n            <ActionGroup>\n              <Button\n                data-testid=\"permission-eval\"\n                id=\"permission-eval\"\n                className=\"pf-v5-u-mr-md\"\n                isDisabled={!form.formState.isValid}\n                onClick={() => evaluate()}\n              >\n                {t(\"evaluate\")}\n              </Button>\n              <Button\n                data-testid=\"permission-eval-revert\"\n                id=\"permission-eval-revert\"\n                className=\"pf-v5-u-mr-md\"\n                variant=\"link\"\n                onClick={() => {\n                  reset();\n                  setEvaluateResult({});\n                  setIsEvaluated(false);\n                }}\n              >\n                {t(\"revert\")}\n              </Button>\n            </ActionGroup>\n          </FormProvider>\n        </SplitItem>\n        <SplitItem>\n          <Panel>\n            <PanelHeader>\n              <Title headingLevel=\"h1\" size=\"md\">\n                {t(\"permissionEvaluationPreview\")}\n              </Title>\n            </PanelHeader>\n            <PanelMainBody>\n              {!isEvaluated ? (\n                <ListEmptyState\n                  icon={BellIcon}\n                  message={t(\"noPermissionsEvaluationResults\")}\n                  instructions={t(\"noPermissionsEvaluationResultsInstructions\")}\n                />\n              ) : (\n                <PermissionEvaluationResult evaluateResult={evaluateResult!} />\n              )}\n            </PanelMainBody>\n          </Panel>\n        </SplitItem>\n      </Split>\n    </PageSection>\n  );\n};\n","import type ClientRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/clientRepresentation\";\nimport { useAlerts, useFetch } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  AlertVariant,\n  PageSection,\n  Tab,\n  TabTitleText,\n} from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { FormProvider, useForm, useWatch } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../admin-client\";\nimport { AuthorizationPolicies } from \"../clients/authorization/Policies\";\nimport { FormFields, SaveOptions } from \"../clients/ClientDetails\";\nimport { ConfirmDialogModal } from \"../components/confirm-dialog/ConfirmDialog\";\nimport {\n  RoutableTabs,\n  useRoutableTab,\n} from \"../components/routable-tabs/RoutableTabs\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useAccess } from \"../context/access/Access\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { toPermissionsConfigurationTabs } from \"../permissions-configuration/routes/PermissionsConfigurationTabs\";\nimport { convertFormValuesToObject, convertToFormValues } from \"../util\";\nimport useToggle from \"../utils/useToggle\";\nimport { PermissionsConfigurationTab } from \"./permission-configuration/PermissionsConfigurationTab\";\nimport { PermissionsEvaluationTab } from \"./permission-evaluation/PermissionsEvaluationTab\";\n\nexport default function PermissionsConfigurationSection() {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const { hasAccess } = useAccess();\n  const { addAlert, addError } = useAlerts();\n  const [adminPermissionsClient, setAdminPermissionsClient] = useState<\n    ClientRepresentation | undefined\n  >();\n  const [changeAuthenticatorOpen, toggleChangeAuthenticatorOpen] = useToggle();\n  const form = useForm<FormFields>();\n  const { realmRepresentation } = useRealm();\n\n  const clientAuthenticatorType = useWatch({\n    control: form.control,\n    name: \"clientAuthenticatorType\",\n    defaultValue: \"client-secret\",\n  });\n\n  const hasManageAuthorization = hasAccess(\"manage-authorization\");\n  const hasViewUsers = hasAccess(\"view-users\");\n  const permissionsResourcesTab = useRoutableTab(\n    toPermissionsConfigurationTabs({\n      realm,\n      permissionClientId: realmRepresentation?.adminPermissionsClient?.id!,\n      tab: \"permissions\",\n    }),\n  );\n  const permissionsPoliciesTab = useRoutableTab(\n    toPermissionsConfigurationTabs({\n      realm,\n      permissionClientId: realmRepresentation?.adminPermissionsClient?.id!,\n      tab: \"policies\",\n    }),\n  );\n  const permissionsEvaluateTab = useRoutableTab(\n    toPermissionsConfigurationTabs({\n      realm,\n      permissionClientId: realmRepresentation?.adminPermissionsClient?.id!,\n      tab: \"evaluation\",\n    }),\n  );\n\n  useFetch(\n    async () => {\n      const clients = await adminClient.clients.find({\n        clientId: \"admin-permissions\",\n      });\n      return clients[0];\n    },\n    (adminPermissionsClient) => {\n      setAdminPermissionsClient(adminPermissionsClient!);\n    },\n    [],\n  );\n\n  const setupForm = (client: ClientRepresentation) => {\n    form.reset({ ...client });\n    convertToFormValues(client, form.setValue);\n  };\n\n  const save = async (\n    { confirmed = false, messageKey = \"clientSaveSuccess\" }: SaveOptions = {\n      confirmed: false,\n      messageKey: \"clientSaveSuccess\",\n    },\n  ) => {\n    if (!(await form.trigger())) {\n      return;\n    }\n\n    if (\n      !adminPermissionsClient?.publicClient &&\n      adminPermissionsClient?.clientAuthenticatorType !==\n        clientAuthenticatorType &&\n      !confirmed\n    ) {\n      toggleChangeAuthenticatorOpen();\n      return;\n    }\n\n    const values = convertFormValuesToObject(form.getValues());\n\n    const submittedClient =\n      convertFormValuesToObject<ClientRepresentation>(values);\n\n    try {\n      const newClient: ClientRepresentation = {\n        ...adminPermissionsClient,\n        ...submittedClient,\n      };\n\n      newClient.clientId = newClient.clientId?.trim();\n\n      await adminClient.clients.update(\n        { id: adminPermissionsClient!.clientId! },\n        newClient,\n      );\n      setupForm(newClient);\n      setAdminPermissionsClient(newClient);\n      addAlert(t(messageKey), AlertVariant.success);\n    } catch (error) {\n      addError(\"clientSaveError\", error);\n    }\n  };\n\n  return (\n    adminPermissionsClient && (\n      <>\n        <ConfirmDialogModal\n          continueButtonLabel=\"yes\"\n          cancelButtonLabel=\"no\"\n          titleKey={t(\"changeAuthenticatorConfirmTitle\", {\n            clientAuthenticatorType: clientAuthenticatorType,\n          })}\n          open={changeAuthenticatorOpen}\n          toggleDialog={toggleChangeAuthenticatorOpen}\n          onConfirm={() => save({ confirmed: true })}\n        >\n          <>\n            {t(\"changeAuthenticatorConfirm\", {\n              clientAuthenticatorType: clientAuthenticatorType,\n            })}\n          </>\n        </ConfirmDialogModal>\n        <PageSection variant=\"light\" className=\"pf-v5-u-p-0\">\n          <FormProvider {...form}>\n            <ViewHeader\n              titleKey={t(\"permissions\")}\n              subKey={t(\"permissionsSubTitle\")}\n            />\n            <RoutableTabs\n              mountOnEnter\n              unmountOnExit\n              defaultLocation={toPermissionsConfigurationTabs({\n                realm,\n                permissionClientId: adminPermissionsClient.id!,\n                tab: \"permissions\",\n              })}\n            >\n              <Tab\n                id=\"resources\"\n                data-testid=\"permissionsResources\"\n                title={<TabTitleText>{t(\"permissions\")}</TabTitleText>}\n                {...permissionsResourcesTab}\n              >\n                <PermissionsConfigurationTab\n                  clientId={adminPermissionsClient.id!}\n                />\n              </Tab>\n              <Tab\n                id=\"policies\"\n                data-testid=\"permissionsPolicies\"\n                title={<TabTitleText>{t(\"policies\")}</TabTitleText>}\n                {...permissionsPoliciesTab}\n              >\n                <AuthorizationPolicies\n                  clientId={adminPermissionsClient.id!}\n                  isDisabled={!hasManageAuthorization}\n                />\n              </Tab>\n              {hasViewUsers && (\n                <Tab\n                  id=\"evaluation\"\n                  data-testid=\"permissionsEvaluation\"\n                  title={<TabTitleText>{t(\"evaluation\")}</TabTitleText>}\n                  {...permissionsEvaluateTab}\n                >\n                  <PermissionsEvaluationTab\n                    client={adminPermissionsClient}\n                    save={save}\n                  />\n                </Tab>\n              )}\n            </RoutableTabs>\n          </FormProvider>\n        </PageSection>\n      </>\n    )\n  );\n}\n"],"names":["LabelGroup","React","props","prevState","id","categoryName","tooltipPosition","isTooltipVisible","Tooltip","css","styles","_a","children","className","isClosable","isCompact","closeBtnAriaLabel","ariaLabel","onClick","numLabels","expandedText","collapsedText","defaultIsOpen","isVertical","isEditable","hasEditableTextArea","editableTextAreaProps","addLabelControl","rest","__rest","isOpen","renderedChildren","numChildren","collapsedTextResult","fillTemplate","renderLabelGroup","labelArray","content","child","i","Label","labelStyles","close","Button","TimesCircleIcon","GenerateId","randomId","_e","AuthorizationScopesDetails","row","useTranslation","associatedScopes","scope","index","jsx","Popover","TextContent","Text","jsxs","TextList","TextListVariants","TextListItem","TextListItemVariants","capitalize","SearchDropdown","types","search","onSearch","t","form","useForm","reset","isDirty","handleSubmit","open","toggle","useToggle","resourceScopes","setResourceScopes","useState","selectedType","useWatch","key","setKey","ref","useRef","submit","useEffect","type","item","prevKey","Dropdown","MenuToggle","FormProvider","Form","TextControl","SelectControl","name","value","onChange","Fragment","ResourceType","resourceScope","ActionGroup","NewPermissionConfigurationDialog","resourceTypes","onSelect","toggleDialog","Modal","ModalVariant","TextVariants","Alert","Table","Thead","Tr","Th","Tbody","resourceType","Td","PermissionsConfigurationTab","clientId","adminClient","useAdminClient","navigate","useNavigate","addAlert","addError","useAlerts","realm","useRealm","permissions","setPermissions","selectedPermission","setSelectedPermission","setSearch","refresh","max","setMax","first","setFirst","newDialog","useSortedResourceTypes","useFetch","permission","policies","scopes","resources","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","AlertVariant","error","KeycloakSpinner","noData","searching","PageSection","toCreatePermissionConfiguration","PaginatingTableToolbar","ToolbarItem","rowIndex","_","rows","p","Link","toPermissionConfigurationDetails","ExpandableRowContent","resource","policy","ListEmptyState","PermissionEvaluationResult","evaluateResult","evaluatedResult","alertTitle","alertVariant","evaluatedAllowedScopes","useMemo","sortBy","evaluatedDeniedScopes","evaluatedPolicies","evaluatedPermission","title","status","List","ListItem","PermissionsEvaluationTab","hasAccess","useAccess","PermissionEvaluateContent","ForbiddenSection","client","control","getValues","trigger","setEvaluateResult","isAlertOpened","setIsAlertOpened","isEvaluated","setIsEvaluated","selectedResourceType","authScopes","r","ResourceTypeComponent","COMPONENTS","evaluate","formValues","resourceName","resEval","evaluation","Split","SplitItem","Panel","PanelMainBody","FormAccess","AlertActionCloseButton","UserSelect","PanelHeader","Title","BellIcon","PermissionsConfigurationSection","adminPermissionsClient","setAdminPermissionsClient","changeAuthenticatorOpen","toggleChangeAuthenticatorOpen","realmRepresentation","clientAuthenticatorType","hasManageAuthorization","hasViewUsers","permissionsResourcesTab","useRoutableTab","toPermissionsConfigurationTabs","permissionsPoliciesTab","permissionsEvaluateTab","setupForm","convertToFormValues","save","confirmed","messageKey","values","convertFormValuesToObject","submittedClient","newClient","ConfirmDialogModal","ViewHeader","RoutableTabs","Tab","TabTitleText","AuthorizationPolicies"],"mappings":"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","x_google_ignoreList":[0]}