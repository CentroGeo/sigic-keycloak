{"version":3,"file":"ScopePicker-Bg-Itgx4.js","sources":["../../../../../../../src/clients/authorization/ScopePicker.tsx"],"sourcesContent":["import type ScopeRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/scopeRepresentation\";\nimport {\n  FormErrorText,\n  HelpItem,\n  KeycloakSelect,\n  SelectVariant,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { FormGroup, SelectOption } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { KeycloakSpinner } from \"@keycloak/keycloak-ui-shared\";\nimport { useIsAdminPermissionsClient } from \"../../utils/useIsAdminPermissionsClient\";\n\ntype Scope = {\n  id: string;\n  name: string;\n};\n\ntype ScopePickerProps = {\n  clientId: string;\n  resourceTypeScopes?: string[];\n};\n\nexport const ScopePicker = ({\n  clientId,\n  resourceTypeScopes,\n}: ScopePickerProps) => {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const {\n    control,\n    formState: { errors },\n  } = useFormContext();\n  const [open, setOpen] = useState(false);\n  const [scopes, setScopes] = useState<ScopeRepresentation[]>();\n  const [search, setSearch] = useState(\"\");\n  const isAdminPermissionsClient = useIsAdminPermissionsClient(clientId);\n\n  useFetch(\n    () => {\n      const params = {\n        id: clientId,\n        first: 0,\n        max: 20,\n        deep: false,\n        name: search,\n      };\n      return adminClient.clients.listAllScopes(params);\n    },\n    setScopes,\n    [search],\n  );\n\n  const renderScopes = (scopes: ScopeRepresentation[] | string[]) =>\n    scopes.map((option, index) => (\n      <SelectOption key={index} value={option}>\n        {typeof option === \"string\" ? option : option.name}\n      </SelectOption>\n    ));\n\n  if (!scopes && !resourceTypeScopes) return <KeycloakSpinner />;\n\n  const allScopes =\n    isAdminPermissionsClient && resourceTypeScopes\n      ? resourceTypeScopes\n      : scopes?.map((scope) => scope.name!);\n\n  return (\n    <FormGroup\n      label={t(\"authorizationScopes\")}\n      labelIcon={\n        <HelpItem helpText={t(\"clientScopesHelp\")} fieldLabelId=\"scopes\" />\n      }\n      fieldId=\"scopes\"\n      isRequired={isAdminPermissionsClient}\n    >\n      <Controller\n        name=\"scopes\"\n        defaultValue={[]}\n        control={control}\n        rules={isAdminPermissionsClient ? { required: t(\"requiredField\") } : {}}\n        render={({ field }) => {\n          const selectedValues = field.value.map((o: Scope) => o.name);\n          return (\n            <>\n              <KeycloakSelect\n                toggleId=\"scopes\"\n                variant={SelectVariant.typeaheadMulti}\n                chipGroupProps={{\n                  numChips: 3,\n                  expandedText: t(\"hide\"),\n                  collapsedText: t(\"showRemaining\"),\n                }}\n                onToggle={(val) => setOpen(val)}\n                isOpen={open}\n                selections={selectedValues}\n                onFilter={(value) => {\n                  setSearch(value);\n                  return renderScopes(allScopes || []);\n                }}\n                onSelect={(selectedValue) => {\n                  const option =\n                    typeof selectedValue === \"string\"\n                      ? selectedValue\n                      : (selectedValue as Scope).name;\n                  const changedValue = field.value.find(\n                    (o: Scope) => o.name === option,\n                  )\n                    ? field.value.filter((item: Scope) => item.name !== option)\n                    : [...field.value, { name: option }];\n                  field.onChange(changedValue);\n                }}\n                onClear={() => {\n                  setSearch(\"\");\n                  field.onChange([]);\n                }}\n                typeAheadAriaLabel={t(\"authorizationScopes\")}\n              >\n                {renderScopes(allScopes || [])}\n              </KeycloakSelect>\n              {isAdminPermissionsClient && errors.scopes && (\n                <FormErrorText message={t(\"required\")} />\n              )}\n            </>\n          );\n        }}\n      />\n    </FormGroup>\n  );\n};\n"],"names":["ScopePicker","clientId","resourceTypeScopes","adminClient","useAdminClient","t","useTranslation","control","errors","useFormContext","open","setOpen","useState","scopes","setScopes","search","setSearch","isAdminPermissionsClient","useIsAdminPermissionsClient","useFetch","params","renderScopes","option","index","jsx","SelectOption","KeycloakSpinner","allScopes","scope","FormGroup","HelpItem","Controller","field","selectedValues","o","jsxs","Fragment","KeycloakSelect","SelectVariant","val","value","selectedValue","changedValue","item","FormErrorText"],"mappings":"uRA0BO,MAAMA,EAAc,CAAC,CAC1B,SAAAC,EACA,mBAAAC,CACF,IAAwB,CAChB,KAAA,CAAE,YAAAC,CAAY,EAAIC,EAAe,EACjC,CAAE,EAAAC,CAAE,EAAIC,EAAe,EACvB,CACJ,QAAAC,EACA,UAAW,CAAE,OAAAC,CAAO,GAClBC,EAAe,EACb,CAACC,EAAMC,CAAO,EAAIC,EAAS,EAAK,EAChC,CAACC,EAAQC,CAAS,EAAIF,EAAgC,EACtD,CAACG,EAAQC,CAAS,EAAIJ,EAAS,EAAE,EACjCK,EAA2BC,EAA4BjB,CAAQ,EAErEkB,EACE,IAAM,CACJ,MAAMC,EAAS,CACb,GAAInB,EACJ,MAAO,EACP,IAAK,GACL,KAAM,GACN,KAAMc,CACR,EACO,OAAAZ,EAAY,QAAQ,cAAciB,CAAM,CACjD,EACAN,EACA,CAACC,CAAM,CACT,EAEA,MAAMM,EAAgBR,GACpBA,EAAO,IAAI,CAACS,EAAQC,IAClBC,EAACC,GAAyB,MAAOH,EAC9B,gBAAOA,GAAW,SAAWA,EAASA,EAAO,MAD7BC,CAEnB,CACD,EAEH,GAAI,CAACV,GAAU,CAACX,EAAoB,SAAQwB,EAAgB,EAAA,EAEtD,MAAAC,EACJV,GAA4Bf,EACxBA,EACAW,GAAQ,IAAKe,GAAUA,EAAM,IAAK,EAGtC,OAAAJ,EAACK,EAAA,CACC,MAAOxB,EAAE,qBAAqB,EAC9B,YACGyB,EAAS,CAAA,SAAUzB,EAAE,kBAAkB,EAAG,aAAa,SAAS,EAEnE,QAAQ,SACR,WAAYY,EAEZ,SAAAO,EAACO,EAAA,CACC,KAAK,SACL,aAAc,CAAC,EACf,QAAAxB,EACA,MAAOU,EAA2B,CAAE,SAAUZ,EAAE,eAAe,CAAA,EAAM,CAAC,EACtE,OAAQ,CAAC,CAAE,MAAA2B,KAAY,CACrB,MAAMC,EAAiBD,EAAM,MAAM,IAAKE,GAAaA,EAAE,IAAI,EAC3D,OAEIC,EAAAC,EAAA,CAAA,SAAA,CAAAZ,EAACa,EAAA,CACC,SAAS,SACT,QAASC,EAAc,eACvB,eAAgB,CACd,SAAU,EACV,aAAcjC,EAAE,MAAM,EACtB,cAAeA,EAAE,eAAe,CAClC,EACA,SAAWkC,GAAQ5B,EAAQ4B,CAAG,EAC9B,OAAQ7B,EACR,WAAYuB,EACZ,SAAWO,IACTxB,EAAUwB,CAAK,EACRnB,EAAaM,GAAa,EAAE,GAErC,SAAWc,GAAkB,CAC3B,MAAMnB,EACJ,OAAOmB,GAAkB,SACrBA,EACCA,EAAwB,KACzBC,EAAeV,EAAM,MAAM,KAC9BE,GAAaA,EAAE,OAASZ,CAAA,EAEvBU,EAAM,MAAM,OAAQW,GAAgBA,EAAK,OAASrB,CAAM,EACxD,CAAC,GAAGU,EAAM,MAAO,CAAE,KAAMV,EAAQ,EACrCU,EAAM,SAASU,CAAY,CAC7B,EACA,QAAS,IAAM,CACb1B,EAAU,EAAE,EACNgB,EAAA,SAAS,EAAE,CACnB,EACA,mBAAoB3B,EAAE,qBAAqB,EAE1C,SAAAgB,EAAaM,GAAa,CAAE,CAAA,CAAA,CAC/B,EACCV,GAA4BT,EAAO,QAClCgB,EAACoB,GAAc,QAASvC,EAAE,UAAU,CAAG,CAAA,CAAA,EAE3C,CAAA,CAEJ,CAAA,CACF,CACF,CAEJ"}