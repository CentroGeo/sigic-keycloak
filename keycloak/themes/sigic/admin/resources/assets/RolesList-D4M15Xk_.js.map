{"version":3,"file":"RolesList-D4M15Xk_.js","sources":["../../../../../../../src/components/roles-list/RolesList.tsx"],"sourcesContent":["import type RoleRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/roleRepresentation\";\nimport { HelpItem, useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport { AlertVariant, Button, ButtonVariant } from \"@patternfly/react-core\";\nimport { useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, To, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { useAccess } from \"../../context/access/Access\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport { toRealmSettings } from \"../../realm-settings/routes/RealmSettings\";\nimport { emptyFormatter, upperCaseFormatter } from \"../../util\";\nimport { translationFormatter } from \"../../utils/translationFormatter\";\nimport { useConfirmDialog } from \"../confirm-dialog/ConfirmDialog\";\nimport { ListEmptyState } from \"@keycloak/keycloak-ui-shared\";\nimport { Action, KeycloakDataTable } from \"@keycloak/keycloak-ui-shared\";\n\nimport \"./RolesList.css\";\n\ntype RoleDetailLinkProps = RoleRepresentation & {\n  defaultRoleName?: string;\n  toDetail: (roleId: string) => To;\n  messageBundle?: string;\n};\n\nconst RoleDetailLink = ({\n  defaultRoleName,\n  toDetail,\n  ...role\n}: RoleDetailLinkProps) => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n  const { hasAccess, hasSomeAccess } = useAccess();\n  const canViewUserRegistration =\n    hasAccess(\"view-realm\") && hasSomeAccess(\"view-clients\", \"manage-clients\");\n\n  return role.name !== defaultRoleName ? (\n    <Link to={toDetail(role.id!)}>{role.name}</Link>\n  ) : (\n    <>\n      {canViewUserRegistration ? (\n        <Link to={toRealmSettings({ realm, tab: \"user-registration\" })}>\n          {role.name}\n        </Link>\n      ) : (\n        <span>{role.name}</span>\n      )}\n      <HelpItem helpText={t(\"defaultRole\")} fieldLabelId=\"defaultRole\" />\n    </>\n  );\n};\n\ntype RolesListProps = {\n  paginated?: boolean;\n  parentRoleId?: string;\n  messageBundle?: string;\n  isReadOnly: boolean;\n  toCreate: To;\n  toDetail: (roleId: string) => To;\n  loader?: (\n    first?: number,\n    max?: number,\n    search?: string,\n  ) => Promise<RoleRepresentation[]>;\n};\n\nexport const RolesList = ({\n  loader,\n  paginated = true,\n  parentRoleId,\n  messageBundle = \"roles\",\n  toCreate,\n  toDetail,\n  isReadOnly,\n}: RolesListProps) => {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const navigate = useNavigate();\n  const { addAlert, addError } = useAlerts();\n  const { realmRepresentation: realm } = useRealm();\n\n  const [selectedRole, setSelectedRole] = useState<RoleRepresentation>();\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"roleDeleteConfirm\",\n    messageKey: t(\"roleDeleteConfirmDialog\", {\n      selectedRoleName: selectedRole ? selectedRole!.name : \"\",\n    }),\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        if (!parentRoleId) {\n          await adminClient.roles.delById({\n            id: selectedRole!.id!,\n          });\n        } else {\n          await adminClient.roles.delCompositeRoles({ id: parentRoleId }, [\n            selectedRole!,\n          ]);\n        }\n        setSelectedRole(undefined);\n        addAlert(t(\"roleDeletedSuccess\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"roleDeleteError\", error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <DeleteConfirm />\n      <KeycloakDataTable\n        key={selectedRole ? selectedRole.id : \"roleList\"}\n        loader={loader!}\n        ariaLabelKey=\"roleList\"\n        searchPlaceholderKey=\"searchForRoles\"\n        isPaginated={paginated}\n        toolbarItem={\n          !isReadOnly && (\n            <Button\n              data-testid=\"create-role\"\n              component={(props) => <Link {...props} to={toCreate} />}\n            >\n              {t(\"createRole\")}\n            </Button>\n          )\n        }\n        actions={\n          isReadOnly\n            ? undefined\n            : [\n                {\n                  title: t(\"delete\"),\n                  onRowClick: (role) => {\n                    setSelectedRole(role);\n                    if (\n                      realm?.defaultRole &&\n                      role.name === realm!.defaultRole!.name\n                    ) {\n                      addAlert(\n                        t(\"defaultRoleDeleteError\"),\n                        AlertVariant.danger,\n                      );\n                    } else toggleDeleteDialog();\n                  },\n                } as Action<RoleRepresentation>,\n              ]\n        }\n        columns={[\n          {\n            name: \"name\",\n            displayKey: \"roleName\",\n            cellRenderer: (row) => (\n              <RoleDetailLink\n                {...row}\n                defaultRoleName={realm?.defaultRole?.name}\n                toDetail={toDetail}\n                messageBundle={messageBundle}\n              />\n            ),\n          },\n          {\n            name: \"composite\",\n            displayKey: \"composite\",\n            cellFormatters: [upperCaseFormatter(), emptyFormatter()],\n          },\n          {\n            name: \"description\",\n            cellFormatters: [translationFormatter(t)],\n          },\n        ]}\n        emptyState={\n          <ListEmptyState\n            hasIcon={true}\n            message={t(`noRoles-${messageBundle}`)}\n            instructions={\n              isReadOnly ? \"\" : t(`noRolesInstructions-${messageBundle}`)\n            }\n            primaryActionText={isReadOnly ? \"\" : t(\"createRole\")}\n            onPrimaryAction={() => navigate(toCreate)}\n          />\n        }\n      />\n    </>\n  );\n};\n"],"names":["RoleDetailLink","defaultRoleName","toDetail","role","t","useTranslation","realm","useRealm","hasAccess","hasSomeAccess","useAccess","canViewUserRegistration","jsx","Link","jsxs","Fragment","toRealmSettings","HelpItem","RolesList","loader","paginated","parentRoleId","messageBundle","toCreate","isReadOnly","adminClient","useAdminClient","navigate","useNavigate","addAlert","addError","useAlerts","selectedRole","setSelectedRole","useState","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","AlertVariant","error","KeycloakDataTable","Button","props","row","upperCaseFormatter","emptyFormatter","translationFormatter","ListEmptyState"],"mappings":"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"}