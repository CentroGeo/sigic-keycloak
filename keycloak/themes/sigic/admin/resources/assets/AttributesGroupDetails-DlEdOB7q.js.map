{"version":3,"file":"AttributesGroupDetails-DlEdOB7q.js","sources":["../../../../../../../src/realm-settings/user-profile/AttributesGroupForm.tsx","../../../../../../../src/realm-settings/user-profile/AttributesGroupDetails.tsx"],"sourcesContent":["import type { UserProfileGroup } from \"@keycloak/keycloak-admin-client/lib/defs/userProfileMetadata\";\nimport { HelpItem, TextControl, useAlerts } from \"@keycloak/keycloak-ui-shared\";\nimport {\n  ActionGroup,\n  Button,\n  FormGroup,\n  PageSection,\n  Text,\n  TextContent,\n} from \"@patternfly/react-core\";\nimport { useEffect, useMemo } from \"react\";\nimport { FormProvider, SubmitHandler, useForm } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate, useParams } from \"react-router-dom\";\nimport { useAdminClient } from \"../../admin-client\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { KeyValueInput } from \"../../components/key-value-form/KeyValueInput\";\nimport type { KeyValueType } from \"../../components/key-value-form/key-value-convert\";\nimport { ViewHeader } from \"../../components/view-header/ViewHeader\";\nimport { useRealm } from \"../../context/realm-context/RealmContext\";\nimport \"../realm-settings-section.css\";\nimport type { EditAttributesGroupParams } from \"../routes/EditAttributesGroup\";\nimport { toUserProfile } from \"../routes/UserProfile\";\nimport { useUserProfile } from \"./UserProfileContext\";\nimport { saveTranslations, Translations } from \"./attribute/TranslatableField\";\nimport { TranslatableField } from \"./attribute/TranslatableField\";\n\nfunction parseAnnotations(input: Record<string, unknown>): KeyValueType[] {\n  return Object.entries(input).reduce((p, [key, value]) => {\n    if (typeof value === \"string\") {\n      return [...p, { key, value }];\n    } else {\n      return [...p];\n    }\n  }, [] as KeyValueType[]);\n}\n\nfunction transformAnnotations(input: KeyValueType[]): Record<string, unknown> {\n  return Object.fromEntries(\n    input\n      .filter((annotation) => annotation.key.length > 0)\n      .map((annotation) => [annotation.key, annotation.value] as const),\n  );\n}\n\ntype FormFields = Required<Omit<UserProfileGroup, \"annotations\">> &\n  Translations & {\n    annotations: KeyValueType[];\n  };\n\nconst defaultValues: FormFields = {\n  annotations: [],\n  displayDescription: \"\",\n  displayHeader: \"\",\n  name: \"\",\n  translation: { key: [] },\n};\n\nexport default function AttributesGroupForm() {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const { realm: realmName, realmRepresentation: realm } = useRealm();\n  const { config, save } = useUserProfile();\n  const navigate = useNavigate();\n  const params = useParams<EditAttributesGroupParams>();\n  const form = useForm<FormFields>({ defaultValues });\n  const { addError } = useAlerts();\n  const editMode = params.name ? true : false;\n\n  const matchingGroup = useMemo(\n    () => config?.groups?.find(({ name }) => name === params.name),\n    [config?.groups, params.name],\n  );\n\n  useEffect(() => {\n    if (!matchingGroup) {\n      return;\n    }\n\n    const annotations = matchingGroup.annotations\n      ? parseAnnotations(matchingGroup.annotations)\n      : [];\n\n    form.reset({ ...defaultValues, ...matchingGroup, annotations });\n  }, [matchingGroup, form]);\n\n  const onSubmit: SubmitHandler<FormFields> = async (values) => {\n    if (!config) {\n      return;\n    }\n\n    const groups = [...(config.groups ?? [])];\n    const updateAt = matchingGroup ? groups.indexOf(matchingGroup) : -1;\n    const { translation, ...groupValues } = values;\n    const updatedGroup: UserProfileGroup = {\n      ...groupValues,\n      annotations: transformAnnotations(values.annotations),\n    };\n\n    if (updateAt === -1) {\n      groups.push(updatedGroup);\n    } else {\n      groups[updateAt] = updatedGroup;\n    }\n\n    const success = await save({ ...config, groups });\n\n    if (success) {\n      if (realm?.internationalizationEnabled) {\n        try {\n          await saveTranslations({\n            adminClient,\n            realmName,\n            translationsData: { translation },\n          });\n        } catch (error) {\n          addError(t(\"errorSavingTranslations\"), error);\n        }\n      }\n      navigate(toUserProfile({ realm: realmName, tab: \"attributes-group\" }));\n    }\n  };\n\n  return (\n    <FormProvider {...form}>\n      <ViewHeader\n        titleKey={matchingGroup ? \"editGroupText\" : \"createGroupText\"}\n        divider\n      />\n      <PageSection variant=\"light\" onSubmit={form.handleSubmit(onSubmit)}>\n        <FormAccess isHorizontal role=\"manage-realm\">\n          <TextControl\n            name=\"name\"\n            label={t(\"nameField\")}\n            labelIcon={t(\"nameHintHelp\")}\n            isDisabled={!!matchingGroup || editMode}\n            rules={{\n              required: t(\"required\"),\n            }}\n          />\n          <FormGroup\n            label={t(\"displayHeader\")}\n            labelIcon={\n              <HelpItem\n                helpText={t(\"displayHeaderHintHelp\")}\n                fieldLabelId=\"displayHeader\"\n              />\n            }\n            fieldId=\"kc-attributes-group-display-header\"\n          >\n            <TranslatableField\n              fieldName=\"displayHeader\"\n              attributeName=\"name\"\n              prefix=\"profile.attribute-group\"\n            />\n          </FormGroup>\n          <FormGroup\n            label={t(\"displayDescription\")}\n            labelIcon={\n              <HelpItem\n                helpText={t(\"displayDescriptionHintHelp\")}\n                fieldLabelId=\"displayDescription\"\n              />\n            }\n            fieldId=\"kc-attributes-group-display-description\"\n          >\n            <TranslatableField\n              fieldName=\"displayDescription\"\n              attributeName=\"name\"\n              prefix=\"profile.attribute-group-description\"\n            />\n          </FormGroup>\n          <TextContent>\n            <Text component=\"h2\">{t(\"annotationsText\")}</Text>\n          </TextContent>\n          <FormGroup label={t(\"annotationsText\")} fieldId=\"kc-annotations\">\n            <KeyValueInput label={t(\"annotationsText\")} name=\"annotations\" />\n          </FormGroup>\n          <ActionGroup>\n            <Button variant=\"primary\" type=\"submit\" data-testid=\"saveGroupBtn\">\n              {t(\"save\")}\n            </Button>\n            <Button\n              variant=\"link\"\n              component={(props) => (\n                <Link\n                  {...props}\n                  to={toUserProfile({\n                    realm: realmName,\n                    tab: \"attributes-group\",\n                  })}\n                />\n              )}\n            >\n              {t(\"cancel\")}\n            </Button>\n          </ActionGroup>\n        </FormAccess>\n      </PageSection>\n    </FormProvider>\n  );\n}\n","import AttributesGroupForm from \"./AttributesGroupForm\";\nimport { UserProfileProvider } from \"./UserProfileContext\";\n\nconst AttributesGroupDetails = () => (\n  <UserProfileProvider>\n    <AttributesGroupForm />\n  </UserProfileProvider>\n);\n\nexport default AttributesGroupDetails;\n"],"names":["parseAnnotations","input","p","key","value","transformAnnotations","annotation","defaultValues","AttributesGroupForm","adminClient","useAdminClient","t","useTranslation","realmName","realm","useRealm","config","save","useUserProfile","navigate","useNavigate","params","useParams","form","useForm","addError","useAlerts","editMode","matchingGroup","useMemo","name","useEffect","annotations","onSubmit","values","groups","updateAt","translation","groupValues","updatedGroup","saveTranslations","error","toUserProfile","jsxs","FormProvider","jsx","ViewHeader","PageSection","FormAccess","TextControl","FormGroup","HelpItem","TranslatableField","TextContent","Text","KeyValueInput","ActionGroup","Button","props","Link","AttributesGroupDetails","UserProfileProvider"],"mappings":"upBA2BA,SAASA,EAAiBC,EAAgD,CACjE,OAAA,OAAO,QAAQA,CAAK,EAAE,OAAO,CAACC,EAAG,CAACC,EAAKC,CAAK,IAC7C,OAAOA,GAAU,SACZ,CAAC,GAAGF,EAAG,CAAE,IAAAC,EAAK,MAAAC,EAAO,EAErB,CAAC,GAAGF,CAAC,EAEb,EAAoB,CACzB,CAEA,SAASG,EAAqBJ,EAAgD,CAC5E,OAAO,OAAO,YACZA,EACG,OAAQK,GAAeA,EAAW,IAAI,OAAS,CAAC,EAChD,IAAKA,GAAe,CAACA,EAAW,IAAKA,EAAW,KAAK,CAAU,CACpE,CACF,CAOA,MAAMC,EAA4B,CAChC,YAAa,CAAC,EACd,mBAAoB,GACpB,cAAe,GACf,KAAM,GACN,YAAa,CAAE,IAAK,CAAG,CAAA,CACzB,EAEA,SAAwBC,GAAsB,CACtC,KAAA,CAAE,YAAAC,CAAY,EAAIC,EAAe,EACjC,CAAE,EAAAC,CAAE,EAAIC,EAAe,EACvB,CAAE,MAAOC,EAAW,oBAAqBC,CAAA,EAAUC,EAAS,EAC5D,CAAE,OAAAC,EAAQ,KAAAC,CAAK,EAAIC,EAAe,EAClCC,EAAWC,EAAY,EACvBC,EAASC,EAAqC,EAC9CC,EAAOC,EAAoB,CAAE,cAAAjB,EAAe,EAC5C,CAAE,SAAAkB,CAAS,EAAIC,EAAU,EACzBC,EAAW,EAAAN,EAAO,KAElBO,EAAgBC,EACpB,IAAMb,GAAQ,QAAQ,KAAK,CAAC,CAAE,KAAAc,KAAWA,IAAST,EAAO,IAAI,EAC7D,CAACL,GAAQ,OAAQK,EAAO,IAAI,CAC9B,EAEAU,EAAU,IAAM,CACd,GAAI,CAACH,EACH,OAGF,MAAMI,EAAcJ,EAAc,YAC9B5B,EAAiB4B,EAAc,WAAW,EAC1C,CAAC,EAELL,EAAK,MAAM,CAAE,GAAGhB,EAAe,GAAGqB,EAAe,YAAAI,EAAa,CAAA,EAC7D,CAACJ,EAAeL,CAAI,CAAC,EAElB,MAAAU,EAAsC,MAAOC,GAAW,CAC5D,GAAI,CAAClB,EACH,OAGF,MAAMmB,EAAS,CAAC,GAAInB,EAAO,QAAU,CAAA,CAAG,EAClCoB,EAAWR,EAAgBO,EAAO,QAAQP,CAAa,EAAI,GAC3D,CAAE,YAAAS,EAAa,GAAGC,CAAA,EAAgBJ,EAClCK,EAAiC,CACrC,GAAGD,EACH,YAAajC,EAAqB6B,EAAO,WAAW,CACtD,EAUA,GARIE,IAAa,GACfD,EAAO,KAAKI,CAAY,EAExBJ,EAAOC,CAAQ,EAAIG,EAGL,MAAMtB,EAAK,CAAE,GAAGD,EAAQ,OAAAmB,EAAQ,EAEnC,CACX,GAAIrB,GAAO,4BACL,GAAA,CACF,MAAM0B,EAAiB,CACrB,YAAA/B,EACA,UAAAI,EACA,iBAAkB,CAAE,YAAAwB,CAAY,CAAA,CACjC,QACMI,EAAO,CACLhB,EAAAd,EAAE,yBAAyB,EAAG8B,CAAK,CAAA,CAGhDtB,EAASuB,EAAc,CAAE,MAAO7B,EAAW,IAAK,kBAAA,CAAoB,CAAC,CAAA,CAEzE,EAGE,OAAA8B,EAACC,EAAc,CAAA,GAAGrB,EAChB,SAAA,CAAAsB,EAACC,EAAA,CACC,SAAUlB,EAAgB,gBAAkB,kBAC5C,QAAO,EAAA,CACT,EACCiB,EAAAE,EAAA,CAAY,QAAQ,QAAQ,SAAUxB,EAAK,aAAaU,CAAQ,EAC/D,SAACU,EAAAK,EAAA,CAAW,aAAY,GAAC,KAAK,eAC5B,SAAA,CAAAH,EAACI,EAAA,CACC,KAAK,OACL,MAAOtC,EAAE,WAAW,EACpB,UAAWA,EAAE,cAAc,EAC3B,WAAY,CAAC,CAACiB,GAAiBD,EAC/B,MAAO,CACL,SAAUhB,EAAE,UAAU,CAAA,CACxB,CACF,EACAkC,EAACK,EAAA,CACC,MAAOvC,EAAE,eAAe,EACxB,UACEkC,EAACM,EAAA,CACC,SAAUxC,EAAE,uBAAuB,EACnC,aAAa,eAAA,CACf,EAEF,QAAQ,qCAER,SAAAkC,EAACO,EAAA,CACC,UAAU,gBACV,cAAc,OACd,OAAO,yBAAA,CAAA,CACT,CACF,EACAP,EAACK,EAAA,CACC,MAAOvC,EAAE,oBAAoB,EAC7B,UACEkC,EAACM,EAAA,CACC,SAAUxC,EAAE,4BAA4B,EACxC,aAAa,oBAAA,CACf,EAEF,QAAQ,0CAER,SAAAkC,EAACO,EAAA,CACC,UAAU,qBACV,cAAc,OACd,OAAO,qCAAA,CAAA,CACT,CACF,EACAP,EAACQ,GACC,SAACR,EAAAS,EAAA,CAAK,UAAU,KAAM,SAAA3C,EAAE,iBAAiB,CAAA,CAAE,CAC7C,CAAA,IACCuC,EAAU,CAAA,MAAOvC,EAAE,iBAAiB,EAAG,QAAQ,iBAC9C,SAACkC,EAAAU,EAAA,CAAc,MAAO5C,EAAE,iBAAiB,EAAG,KAAK,aAAc,CAAA,EACjE,IACC6C,EACC,CAAA,SAAA,CAACX,EAAAY,EAAA,CAAO,QAAQ,UAAU,KAAK,SAAS,cAAY,eACjD,SAAE9C,EAAA,MAAM,CACX,CAAA,EACAkC,EAACY,EAAA,CACC,QAAQ,OACR,UAAYC,GACVb,EAACc,EAAA,CACE,GAAGD,EACJ,GAAIhB,EAAc,CAChB,MAAO7B,EACP,IAAK,kBACN,CAAA,CAAA,CACH,EAGD,WAAE,QAAQ,CAAA,CAAA,CACb,CACF,CAAA,CAAA,CAAA,CACF,CACF,CAAA,CAAA,EACF,CAEJ,CCtMA,MAAM+C,GAAyB,IAC7Bf,EAACgB,EACC,CAAA,SAAAhB,EAACrC,IAAoB,CACvB,CAAA"}