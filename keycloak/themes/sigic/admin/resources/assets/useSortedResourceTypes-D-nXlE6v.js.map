{"version":3,"file":"useSortedResourceTypes-D-nXlE6v.js","sources":["../../../../../../../src/permissions-configuration/resource-types/GroupSelect.tsx","../../../../../../../src/permissions-configuration/resource-types/RoleSelect.tsx","../../../../../../../src/permissions-configuration/resource-types/ClientSelectComponent.tsx","../../../../../../../src/permissions-configuration/resource-types/ResourceType.tsx","../../../../../../../src/utils/useSortedResourceTypes.ts"],"sourcesContent":["import GroupRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/groupRepresentation\";\nimport {\n  FormErrorText,\n  HelpItem,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { Button, FormGroup } from \"@patternfly/react-core\";\nimport { MinusCircleIcon } from \"@patternfly/react-icons\";\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useState } from \"react\";\nimport { Controller, useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport type { ComponentProps } from \"../../components/dynamic/components\";\nimport { GroupPickerDialog } from \"../../components/group/GroupPickerDialog\";\n\ntype GroupSelectProps = Omit<ComponentProps, \"convertToName\"> & {\n  variant?: \"typeahead\" | \"typeaheadMulti\";\n  isRequired?: boolean;\n};\n\nconst convertGroups = (groups: GroupRepresentation[]): string[] =>\n  groups.map(({ id }) => id!);\n\nexport const GroupSelect = ({\n  name,\n  label,\n  helpText,\n  defaultValue,\n  isDisabled = false,\n  isRequired,\n  variant = \"typeaheadMulti\",\n}: GroupSelectProps) => {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const {\n    control,\n    setValue,\n    getValues,\n    formState: { errors },\n  } = useFormContext();\n  const values: string[] = getValues(name!);\n  const [open, setOpen] = useState(false);\n  const [groups, setGroups] = useState<GroupRepresentation[]>([]);\n\n  useFetch(\n    () => {\n      if (values && values.length > 0) {\n        return Promise.all(\n          (values as string[]).map((id) => adminClient.groups.findOne({ id })),\n        );\n      }\n      return Promise.resolve([]);\n    },\n    (groups) => {\n      setGroups(groups.flat().filter((g) => g) as GroupRepresentation[]);\n    },\n    [],\n  );\n\n  const selectOne = variant === \"typeahead\";\n\n  return (\n    <FormGroup\n      label={t(label!)}\n      labelIcon={<HelpItem helpText={t(helpText!)} fieldLabelId=\"groups\" />}\n      fieldId=\"groups\"\n      isRequired={isRequired}\n    >\n      <Controller\n        name={name!}\n        control={control}\n        defaultValue={defaultValue}\n        rules={{\n          validate: (value?: string[]) => {\n            return isRequired && value && value.length > 0;\n          },\n        }}\n        render={({ field }) => (\n          <>\n            {open && (\n              <GroupPickerDialog\n                type={selectOne ? \"selectOne\" : \"selectMany\"}\n                text={{\n                  title: \"addGroupsToGroupPolicy\",\n                  ok: \"add\",\n                }}\n                onConfirm={(selectGroup) => {\n                  if (selectOne) {\n                    field.onChange(convertGroups(selectGroup || []));\n                    setGroups(selectGroup || []);\n                  } else {\n                    field.onChange([\n                      ...(field.value || []),\n                      ...convertGroups(selectGroup || []),\n                    ]);\n                    setGroups([...groups, ...(selectGroup || [])]);\n                  }\n                  setOpen(false);\n                }}\n                onClose={() => {\n                  setOpen(false);\n                }}\n                filterGroups={groups}\n              />\n            )}\n            <Button\n              data-testid=\"select-group-button\"\n              isDisabled={isDisabled}\n              variant=\"secondary\"\n              onClick={() => {\n                setOpen(true);\n              }}\n            >\n              {t(\"addGroups\")}\n            </Button>\n          </>\n        )}\n      />\n      {groups.length > 0 && (\n        <Table variant=\"compact\">\n          <Thead>\n            <Tr>\n              <Th>{t(\"groups\")}</Th>\n              <Th aria-hidden=\"true\" />\n            </Tr>\n          </Thead>\n          <Tbody>\n            {groups.map((group) => (\n              <Tr key={group.id}>\n                <Td>{group.path}</Td>\n                <Td>\n                  <Button\n                    variant=\"link\"\n                    className=\"keycloak__client-authorization__policy-row-remove\"\n                    icon={<MinusCircleIcon />}\n                    onClick={() => {\n                      setValue(name!, [\n                        ...convertGroups(\n                          (groups || []).filter(({ id }) => id !== group.id),\n                        ),\n                      ]);\n                      setGroups([\n                        ...groups.filter(({ id }) => id !== group.id),\n                      ]);\n                    }}\n                  />\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n      {errors[name!] && <FormErrorText message={t(\"requiredGroups\")} />}\n    </FormGroup>\n  );\n};\n","import { useState } from \"react\";\nimport { Button, FormGroup } from \"@patternfly/react-core\";\nimport { MinusCircleIcon } from \"@patternfly/react-icons\";\nimport { Table, Tbody, Td, Th, Thead, Tr } from \"@patternfly/react-table\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { useAdminClient } from \"../../admin-client\";\nimport {\n  FormErrorText,\n  HelpItem,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport { AddRoleMappingModal } from \"../../components/role-mapping/AddRoleMappingModal\";\nimport { Row, ServiceRole } from \"../../components/role-mapping/RoleMapping\";\n\ntype RoleSelectorProps = {\n  name: string;\n  isRadio?: boolean;\n};\n\nexport const RoleSelect = ({ name, isRadio = false }: RoleSelectorProps) => {\n  const { adminClient } = useAdminClient();\n  const { t } = useTranslation();\n  const {\n    getValues,\n    setValue,\n    formState: { errors },\n  } = useFormContext<{ [key: string]: string[] }>();\n  const values = getValues(name) || [];\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [selectedRoles, setSelectedRoles] = useState<Row[]>([]);\n\n  useFetch(\n    async () => {\n      if (values.length > 0) {\n        const roles = await Promise.all(\n          values.map((id) => adminClient.roles.findOneById({ id })),\n        );\n        return Promise.all(\n          roles.map(async (role) => ({\n            role: role!,\n            client: role!.clientRole\n              ? await adminClient.clients.findOne({ id: role?.containerId! })\n              : undefined,\n          })),\n        );\n      }\n      return [];\n    },\n    setSelectedRoles,\n    [],\n  );\n\n  return (\n    <FormGroup\n      label={isRadio ? t(\"role\") : t(\"roles\")}\n      labelIcon={\n        <HelpItem\n          helpText={isRadio ? t(\"selectRole\") : t(\"policyRolesHelp\")}\n          fieldLabelId=\"roles\"\n        />\n      }\n      fieldId={name}\n      isRequired\n    >\n      {isModalOpen && (\n        <AddRoleMappingModal\n          id=\"role\"\n          type=\"roles\"\n          title={t(\"selectRole\")}\n          actionLabel={t(\"select\")}\n          isRadio={isRadio}\n          onAssign={(rows) => {\n            setValue(name, [\n              ...(!isRadio ? values : []),\n              ...rows\n                .filter((row) => row.role.id !== undefined)\n                .map((row) => row.role.id!),\n            ]);\n\n            setSelectedRoles(isRadio ? rows : [...selectedRoles, ...rows]);\n            setIsModalOpen(false);\n          }}\n          onClose={() => setIsModalOpen(false)}\n        />\n      )}\n      <Button\n        data-testid=\"select-role-button\"\n        variant=\"secondary\"\n        onClick={() => setIsModalOpen(true)}\n      >\n        {isRadio ? t(\"selectRole\") : t(\"addRoles\")}\n      </Button>\n      {selectedRoles.length > 0 && (\n        <Table variant=\"compact\">\n          <Thead>\n            <Tr>\n              <Th>{t(\"roles\")}</Th>\n              <Th aria-hidden=\"true\" />\n            </Tr>\n          </Thead>\n          <Tbody>\n            {selectedRoles.map((row) => (\n              <Tr key={row.role.id}>\n                <Td>\n                  <ServiceRole role={row.role} client={row.client} />\n                </Td>\n                <Td>\n                  <Button\n                    variant=\"link\"\n                    className=\"keycloak__client-authorization__policy-row-remove\"\n                    icon={<MinusCircleIcon />}\n                    onClick={() => {\n                      setValue(\n                        name,\n                        values.filter((id) => id !== row.role.id),\n                      );\n                      setSelectedRoles(\n                        selectedRoles.filter((s) => s.role.id !== row.role.id),\n                      );\n                    }}\n                  />\n                </Td>\n              </Tr>\n            ))}\n          </Tbody>\n        </Table>\n      )}\n      {errors[name] && <FormErrorText message={t(\"requiredRoles\")} />}\n    </FormGroup>\n  );\n};\n","import { ClientSelect } from \"../../components/client/ClientSelect\";\nimport { ComponentProps } from \"../../components/dynamic/components\";\n\nexport const ClientSelectComponent = (props: ComponentProps) => (\n  <ClientSelect {...props} clientKey=\"id\" />\n);\n","import { useTranslation } from \"react-i18next\";\nimport { FormGroup, Radio } from \"@patternfly/react-core\";\nimport { HelpItem } from \"@keycloak/keycloak-ui-shared\";\nimport { useFormContext } from \"react-hook-form\";\nimport { useState, type JSX } from \"react\";\nimport { GroupSelect } from \"./GroupSelect\";\nimport { UserSelect } from \"../../components/users/UserSelect\";\nimport { RoleSelect } from \"./RoleSelect\";\nimport { ClientSelectComponent } from \"./ClientSelectComponent\";\n\ntype ResourceTypeProps = {\n  withEnforceAccessTo?: boolean;\n  resourceType: string;\n};\n\nexport const COMPONENTS: {\n  [index: string]: (props: any) => JSX.Element;\n} = {\n  users: UserSelect,\n  clients: ClientSelectComponent,\n  groups: GroupSelect,\n  roles: RoleSelect,\n} as const;\n\nexport const isValidComponentType = (value: string) => value in COMPONENTS;\n\nexport const ResourceType = ({\n  resourceType,\n  withEnforceAccessTo = true,\n}: ResourceTypeProps) => {\n  const { t } = useTranslation();\n  const form = useFormContext();\n  const resourceIds: string[] = form.getValues(\"resources\");\n  const normalizedResourceType = resourceType.toLowerCase();\n\n  const [isSpecificResources, setIsSpecificResources] = useState(\n    resourceIds?.some((id) => id !== resourceType) || !withEnforceAccessTo,\n  );\n\n  function getComponentType() {\n    if (isValidComponentType(normalizedResourceType)) {\n      return COMPONENTS[normalizedResourceType];\n    }\n    return null;\n  }\n\n  const ComponentType = getComponentType();\n\n  return (\n    <>\n      {withEnforceAccessTo && (\n        <FormGroup\n          label={t(\"enforceAccessTo\")}\n          labelIcon={\n            <HelpItem\n              helpText={t(\"enforceAccessToHelpText\")}\n              fieldLabelId=\"enforce-access-to\"\n            />\n          }\n          fieldId=\"EnforceAccessTo\"\n          hasNoPaddingTop\n          isRequired\n        >\n          <Radio\n            id=\"allResources\"\n            data-testid=\"allResources\"\n            isChecked={!isSpecificResources}\n            name=\"EnforceAccessTo\"\n            label={t(`allResourceType`, { resourceType })}\n            onChange={() => {\n              setIsSpecificResources(false);\n              form.setValue(\"resources\", []);\n            }}\n            className=\"pf-v5-u-mb-md\"\n          />\n          <Radio\n            id=\"specificResources\"\n            data-testid=\"specificResources\"\n            isChecked={isSpecificResources}\n            name=\"EnforceAccessTo\"\n            label={t(`specificResourceType`, { resourceType })}\n            onChange={() => {\n              setIsSpecificResources(true);\n              form.setValue(\"resources\", []);\n            }}\n            className=\"pf-v5-u-mb-md\"\n          />\n        </FormGroup>\n      )}\n      {isSpecificResources && ComponentType && (\n        <ComponentType\n          name={withEnforceAccessTo ? \"resources\" : \"resource\"}\n          label={`${normalizedResourceType}Resources`}\n          helpText={t(\"resourceTypeHelpText\", {\n            resourceType: normalizedResourceType,\n          })}\n          defaultValue={[]}\n          variant={withEnforceAccessTo ? \"typeaheadMulti\" : \"typeahead\"}\n          isRequired={withEnforceAccessTo}\n          isRadio={!withEnforceAccessTo}\n        />\n      )}\n    </>\n  );\n};\n","import ResourceServerRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/resourceServerRepresentation\";\nimport { useMemo, useState } from \"react\";\nimport { useAdminClient } from \"../admin-client\";\nimport { useFetch } from \"@keycloak/keycloak-ui-shared\";\nimport { sortBy } from \"lodash-es\";\n\ntype UseSortedResourceTypesProps = {\n  clientId: string;\n};\n\nexport default function useSortedResourceTypes({\n  clientId,\n}: UseSortedResourceTypesProps) {\n  const { adminClient } = useAdminClient();\n  const [resourceServer, setResourceServer] =\n    useState<ResourceServerRepresentation>();\n\n  useFetch(\n    () =>\n      adminClient.clients.getResourceServer({\n        id: clientId,\n      }),\n    setResourceServer,\n    [clientId],\n  );\n\n  const resourceTypes = useMemo(() => {\n    const allResourceTypes = resourceServer?.authorizationSchema?.resourceTypes;\n    return allResourceTypes\n      ? sortBy(Object.values(allResourceTypes), \"type\")\n      : [];\n  }, [resourceServer]);\n\n  return resourceTypes;\n}\n"],"names":["convertGroups","groups","id","GroupSelect","name","label","helpText","defaultValue","isDisabled","isRequired","variant","adminClient","useAdminClient","t","useTranslation","control","setValue","getValues","errors","useFormContext","values","open","setOpen","useState","setGroups","useFetch","g","selectOne","jsxs","FormGroup","HelpItem","jsx","Controller","value","field","Fragment","GroupPickerDialog","selectGroup","Button","Table","Thead","Tr","Th","Tbody","group","Td","MinusCircleIcon","FormErrorText","RoleSelect","isRadio","isModalOpen","setIsModalOpen","selectedRoles","setSelectedRoles","roles","role","AddRoleMappingModal","rows","row","ServiceRole","s","ClientSelectComponent","props","ClientSelect","COMPONENTS","UserSelect","isValidComponentType","ResourceType","resourceType","withEnforceAccessTo","form","resourceIds","normalizedResourceType","isSpecificResources","setIsSpecificResources","getComponentType","ComponentType","Radio","useSortedResourceTypes","clientId","resourceServer","setResourceServer","useMemo","allResourceTypes","sortBy"],"mappings":"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"}