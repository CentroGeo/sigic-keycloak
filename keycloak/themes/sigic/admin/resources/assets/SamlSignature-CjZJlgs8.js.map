{"version":3,"file":"SamlSignature-CjZJlgs8.js","sources":["../../../../../../../src/clients/add/SamlConfig.tsx","../../../../../../../src/clients/add/SamlSignature.tsx"],"sourcesContent":["import { Path, PathValue } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectControl } from \"@keycloak/keycloak-ui-shared\";\nimport { DefaultSwitchControl } from \"../../components/SwitchControl\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { convertAttributeNameToForm } from \"../../util\";\nimport { FormFields } from \"../ClientDetails\";\n\ntype ToggleProps = {\n  name: PathValue<FormFields, Path<FormFields>>;\n  label: string;\n};\nexport const Toggle = ({ name, label }: ToggleProps) => {\n  const { t } = useTranslation();\n\n  return (\n    <DefaultSwitchControl\n      name={name}\n      label={t(label)}\n      labelIcon={t(`${label}Help`)}\n      stringify\n    />\n  );\n};\n\nexport const SamlConfig = () => {\n  const { t } = useTranslation();\n\n  return (\n    <FormAccess\n      isHorizontal\n      role=\"manage-clients\"\n      className=\"keycloak__capability-config__form\"\n    >\n      <SelectControl\n        name=\"attributes.saml_name_id_format\"\n        label={t(\"nameIdFormat\")}\n        labelIcon={t(\"nameIdFormatHelp\")}\n        controller={{\n          defaultValue: \"username\",\n        }}\n        options={[\"username\", \"email\", \"transient\", \"persistent\"]}\n      />\n      <Toggle\n        name=\"attributes.saml_force_name_id_format\"\n        label=\"forceNameIdFormat\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\"attributes.saml.force.post.binding\")}\n        label=\"forcePostBinding\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\"attributes.saml.artifact.binding\")}\n        label=\"forceArtifactBinding\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\"attributes.saml.authnstatement\")}\n        label=\"includeAuthnStatement\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\n          \"attributes.saml.onetimeuse.condition\",\n        )}\n        label=\"includeOneTimeUseCondition\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\n          \"attributes.saml.server.signature.keyinfo.ext\",\n        )}\n        label=\"optimizeLookup\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\"attributes.saml.allow.ecp.flow\")}\n        label=\"allowEcpFlow\"\n      />\n    </FormAccess>\n  );\n};\n","import { useFormContext } from \"react-hook-form\";\nimport { useTranslation } from \"react-i18next\";\nimport { SelectControl } from \"@keycloak/keycloak-ui-shared\";\nimport { FormAccess } from \"../../components/form/FormAccess\";\nimport { convertAttributeNameToForm } from \"../../util\";\nimport { FormFields } from \"../ClientDetails\";\nimport { Toggle } from \"./SamlConfig\";\n\nexport const SIGNATURE_ALGORITHMS = [\n  \"RSA_SHA1\",\n  \"RSA_SHA256\",\n  \"RSA_SHA256_MGF1\",\n  \"RSA_SHA512\",\n  \"RSA_SHA512_MGF1\",\n  \"DSA_SHA1\",\n] as const;\n\nconst KEYNAME_TRANSFORMER = [\"NONE\", \"KEY_ID\", \"CERT_SUBJECT\"] as const;\n\nconst CANONICALIZATION = [\n  { name: \"EXCLUSIVE\", value: \"http://www.w3.org/2001/10/xml-exc-c14n#\" },\n  {\n    name: \"EXCLUSIVE_WITH_COMMENTS\",\n    value: \"http://www.w3.org/2001/10/xml-exc-c14n#WithComments\",\n  },\n  {\n    name: \"INCLUSIVE\",\n    value: \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315\",\n  },\n  {\n    name: \"INCLUSIVE_WITH_COMMENTS\",\n    value: \"http://www.w3.org/TR/2001/REC-xml-c14n-20010315#WithComments\",\n  },\n] as const;\n\nexport const SamlSignature = () => {\n  const { t } = useTranslation();\n  const { watch } = useFormContext<FormFields>();\n\n  const signDocs = watch(\n    convertAttributeNameToForm<FormFields>(\"attributes.saml.server.signature\"),\n  );\n  const signAssertion = watch(\n    convertAttributeNameToForm<FormFields>(\n      \"attributes.saml.assertion.signature\",\n    ),\n  );\n\n  return (\n    <FormAccess\n      isHorizontal\n      role=\"manage-clients\"\n      className=\"keycloak__capability-config__form\"\n    >\n      <Toggle\n        name={convertAttributeNameToForm(\"attributes.saml.server.signature\")}\n        label=\"signDocuments\"\n      />\n      <Toggle\n        name={convertAttributeNameToForm(\"attributes.saml.assertion.signature\")}\n        label=\"signAssertions\"\n      />\n      {(signDocs === \"true\" || signAssertion === \"true\") && (\n        <>\n          <SelectControl\n            name={convertAttributeNameToForm<FormFields>(\n              \"attributes.saml.signature.algorithm\",\n            )}\n            label={t(\"signatureAlgorithm\")}\n            labelIcon={t(\"signatureAlgorithmHelp\")}\n            controller={{\n              defaultValue: SIGNATURE_ALGORITHMS[0],\n            }}\n            options={[...SIGNATURE_ALGORITHMS]}\n          />\n          <SelectControl\n            name={convertAttributeNameToForm<FormFields>(\n              \"attributes.saml.server.signature.keyinfo.xmlSigKeyInfoKeyNameTransformer\",\n            )}\n            label={t(\"signatureKeyName\")}\n            labelIcon={t(\"signatureKeyNameHelp\")}\n            controller={{\n              defaultValue: KEYNAME_TRANSFORMER[0],\n            }}\n            options={[...KEYNAME_TRANSFORMER]}\n          />\n          <SelectControl\n            name=\"attributes.saml_signature_canonicalization_method\"\n            label={t(\"canonicalization\")}\n            labelIcon={t(\"canonicalizationHelp\")}\n            controller={{\n              defaultValue: CANONICALIZATION[0].value,\n            }}\n            options={CANONICALIZATION.map(({ name, value }) => ({\n              key: value,\n              value: name,\n            }))}\n          />\n        </>\n      )}\n    </FormAccess>\n  );\n};\n"],"names":["Toggle","name","label","t","useTranslation","jsx","DefaultSwitchControl","SamlConfig","jsxs","FormAccess","SelectControl","convertAttributeNameToForm","SIGNATURE_ALGORITHMS","KEYNAME_TRANSFORMER","CANONICALIZATION","SamlSignature","watch","useFormContext","signDocs","signAssertion","Fragment","value"],"mappings":"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"}