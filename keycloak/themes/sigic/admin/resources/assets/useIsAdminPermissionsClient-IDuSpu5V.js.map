{"version":3,"file":"useIsAdminPermissionsClient-IDuSpu5V.js","sources":["../../../../../../../src/utils/useIsAdminPermissionsClient.ts"],"sourcesContent":["import { useState, useEffect } from \"react\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\n\nexport function useIsAdminPermissionsClient(selectedClientId: string) {\n  const { realmRepresentation } = useRealm();\n  const [isAdminPermissionsClient, setIsAdminPermissionsClient] =\n    useState<boolean>(false);\n\n  useEffect(() => {\n    if (realmRepresentation?.adminPermissionsClient) {\n      setIsAdminPermissionsClient(\n        selectedClientId === realmRepresentation.adminPermissionsClient.id,\n      );\n    } else {\n      setIsAdminPermissionsClient(false);\n    }\n  }, [selectedClientId, realmRepresentation]);\n\n  return isAdminPermissionsClient;\n}\n"],"names":["useIsAdminPermissionsClient","selectedClientId","realmRepresentation","useRealm","isAdminPermissionsClient","setIsAdminPermissionsClient","useState","useEffect"],"mappings":"uFAGO,SAASA,EAA4BC,EAA0B,CAC9D,KAAA,CAAE,oBAAAC,CAAoB,EAAIC,EAAS,EACnC,CAACC,EAA0BC,CAA2B,EAC1DC,EAAkB,EAAK,EAEzB,OAAAC,EAAU,IAAM,CACVL,GAAqB,uBACvBG,EACEJ,IAAqBC,EAAoB,uBAAuB,EAClE,EAEAG,EAA4B,EAAK,CACnC,EACC,CAACJ,EAAkBC,CAAmB,CAAC,EAEnCE,CACT"}