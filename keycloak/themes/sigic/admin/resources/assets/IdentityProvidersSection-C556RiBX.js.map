{"version":3,"file":"IdentityProvidersSection-C556RiBX.js","sources":["../../../../../../../../../node_modules/.pnpm/@patternfly+react-core@5.4.14_react-dom@18.3.1_react@18.3.1__react@18.3.1/node_modules/@patternfly/react-core/dist/esm/components/Dropdown/DropdownGroup.js","../../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_arrayAggregator.js","../../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_baseAggregator.js","../../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/_createAggregator.js","../../../../../../../../../node_modules/.pnpm/lodash-es@4.17.21/node_modules/lodash-es/groupBy.js","../../../../../../../src/identity-providers/IdentityProvidersSection.tsx"],"sourcesContent":["import { __rest } from \"tslib\";\nimport React from 'react';\nimport { css } from '@patternfly/react-styles';\nimport { MenuGroup } from '../Menu';\nexport const DropdownGroup = (_a) => {\n    var { children, className, label, labelHeadingLevel = 'h1' } = _a, props = __rest(_a, [\"children\", \"className\", \"label\", \"labelHeadingLevel\"]);\n    return (React.createElement(MenuGroup, Object.assign({ className: css(className), label: label, labelHeadingLevel: labelHeadingLevel }, props), children));\n};\nDropdownGroup.displayName = 'DropdownGroup';\n//# sourceMappingURL=DropdownGroup.js.map","/**\n * A specialized version of `baseAggregator` for arrays.\n *\n * @private\n * @param {Array} [array] The array to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction arrayAggregator(array, setter, iteratee, accumulator) {\n  var index = -1,\n      length = array == null ? 0 : array.length;\n\n  while (++index < length) {\n    var value = array[index];\n    setter(accumulator, value, iteratee(value), array);\n  }\n  return accumulator;\n}\n\nexport default arrayAggregator;\n","import baseEach from './_baseEach.js';\n\n/**\n * Aggregates elements of `collection` on `accumulator` with keys transformed\n * by `iteratee` and values set by `setter`.\n *\n * @private\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} setter The function to set `accumulator` values.\n * @param {Function} iteratee The iteratee to transform keys.\n * @param {Object} accumulator The initial aggregated object.\n * @returns {Function} Returns `accumulator`.\n */\nfunction baseAggregator(collection, setter, iteratee, accumulator) {\n  baseEach(collection, function(value, key, collection) {\n    setter(accumulator, value, iteratee(value), collection);\n  });\n  return accumulator;\n}\n\nexport default baseAggregator;\n","import arrayAggregator from './_arrayAggregator.js';\nimport baseAggregator from './_baseAggregator.js';\nimport baseIteratee from './_baseIteratee.js';\nimport isArray from './isArray.js';\n\n/**\n * Creates a function like `_.groupBy`.\n *\n * @private\n * @param {Function} setter The function to set accumulator values.\n * @param {Function} [initializer] The accumulator object initializer.\n * @returns {Function} Returns the new aggregator function.\n */\nfunction createAggregator(setter, initializer) {\n  return function(collection, iteratee) {\n    var func = isArray(collection) ? arrayAggregator : baseAggregator,\n        accumulator = initializer ? initializer() : {};\n\n    return func(collection, setter, baseIteratee(iteratee, 2), accumulator);\n  };\n}\n\nexport default createAggregator;\n","import baseAssignValue from './_baseAssignValue.js';\nimport createAggregator from './_createAggregator.js';\n\n/** Used for built-in method references. */\nvar objectProto = Object.prototype;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/**\n * Creates an object composed of keys generated from the results of running\n * each element of `collection` thru `iteratee`. The order of grouped values\n * is determined by the order they occur in `collection`. The corresponding\n * value of each key is an array of elements responsible for generating the\n * key. The iteratee is invoked with one argument: (value).\n *\n * @static\n * @memberOf _\n * @since 0.1.0\n * @category Collection\n * @param {Array|Object} collection The collection to iterate over.\n * @param {Function} [iteratee=_.identity] The iteratee to transform keys.\n * @returns {Object} Returns the composed aggregate object.\n * @example\n *\n * _.groupBy([6.1, 4.2, 6.3], Math.floor);\n * // => { '4': [4.2], '6': [6.1, 6.3] }\n *\n * // The `_.property` iteratee shorthand.\n * _.groupBy(['one', 'two', 'three'], 'length');\n * // => { '3': ['one', 'two'], '5': ['three'] }\n */\nvar groupBy = createAggregator(function(result, value, key) {\n  if (hasOwnProperty.call(result, key)) {\n    result[key].push(value);\n  } else {\n    baseAssignValue(result, key, [value]);\n  }\n});\n\nexport default groupBy;\n","import type IdentityProviderRepresentation from \"@keycloak/keycloak-admin-client/lib/defs/identityProviderRepresentation\";\nimport type { IdentityProvidersQuery } from \"@keycloak/keycloak-admin-client/lib/resources/identityProviders\";\nimport {\n  Action,\n  IconMapper,\n  KeycloakDataTable,\n  ListEmptyState,\n  useAlerts,\n  useFetch,\n} from \"@keycloak/keycloak-ui-shared\";\nimport {\n  AlertVariant,\n  Badge,\n  Button,\n  ButtonVariant,\n  CardTitle,\n  Checkbox,\n  Dropdown,\n  DropdownGroup,\n  DropdownItem,\n  DropdownList,\n  Gallery,\n  MenuToggle,\n  PageSection,\n  Split,\n  SplitItem,\n  Text,\n  TextContent,\n  TextVariants,\n  ToolbarItem,\n} from \"@patternfly/react-core\";\nimport { groupBy, sortBy } from \"lodash-es\";\nimport { Fragment, useState } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport { useAdminClient } from \"../admin-client\";\nimport { useConfirmDialog } from \"../components/confirm-dialog/ConfirmDialog\";\nimport { ClickableCard } from \"../components/keycloak-card/ClickableCard\";\nimport { ViewHeader } from \"../components/view-header/ViewHeader\";\nimport { useRealm } from \"../context/realm-context/RealmContext\";\nimport { useServerInfo } from \"../context/server-info/ServerInfoProvider\";\nimport helpUrls from \"../help-urls\";\nimport { toEditOrganization } from \"../organizations/routes/EditOrganization\";\nimport { upperCaseFormatter } from \"../util\";\nimport { ManageOrderDialog } from \"./ManageOrderDialog\";\nimport { toIdentityProvider } from \"./routes/IdentityProvider\";\nimport { toIdentityProviderCreate } from \"./routes/IdentityProviderCreate\";\n\nconst DetailLink = (identityProvider: IdentityProviderRepresentation) => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n\n  return (\n    <Link\n      key={identityProvider.providerId}\n      to={toIdentityProvider({\n        realm,\n        providerId: identityProvider.providerId!,\n        alias: identityProvider.alias!,\n        tab: \"settings\",\n      })}\n    >\n      {identityProvider.displayName || identityProvider.alias}\n      {!identityProvider.enabled && (\n        <Badge\n          key={`${identityProvider.providerId}-disabled`}\n          isRead\n          className=\"pf-v5-u-ml-sm\"\n        >\n          {t(\"disabled\")}\n        </Badge>\n      )}\n    </Link>\n  );\n};\n\nconst OrganizationLink = (identityProvider: IdentityProviderRepresentation) => {\n  const { t } = useTranslation();\n  const { realm } = useRealm();\n\n  if (!identityProvider?.organizationId) {\n    return \"â€”\";\n  }\n\n  return (\n    <Link\n      key={identityProvider.providerId}\n      to={toEditOrganization({\n        realm,\n        id: identityProvider.organizationId,\n        tab: \"identityProviders\",\n      })}\n    >\n      {t(\"organization\")}\n    </Link>\n  );\n};\n\nexport default function IdentityProvidersSection() {\n  const { adminClient } = useAdminClient();\n\n  const { t } = useTranslation();\n  const identityProviders = groupBy(\n    useServerInfo().identityProviders,\n    \"groupName\",\n  );\n  const { realm } = useRealm();\n  const navigate = useNavigate();\n  const [key, setKey] = useState(0);\n  const refresh = () => setKey(key + 1);\n\n  const [hide, setHide] = useState(false);\n  const [addProviderOpen, setAddProviderOpen] = useState(false);\n  const [manageDisplayDialog, setManageDisplayDialog] = useState(false);\n  const [hasProviders, setHasProviders] = useState(false);\n  const [selectedProvider, setSelectedProvider] =\n    useState<IdentityProviderRepresentation>();\n  const { addAlert, addError } = useAlerts();\n\n  useFetch(\n    async () => adminClient.identityProviders.find({ max: 1 }),\n    (providers) => {\n      setHasProviders(providers.length === 1);\n    },\n    [key],\n  );\n\n  const loader = async (first?: number, max?: number, search?: string) => {\n    const params: IdentityProvidersQuery = {\n      first: first!,\n      max: max!,\n      realmOnly: hide,\n    };\n    if (search) {\n      params.search = search;\n    }\n    const providers = await adminClient.identityProviders.find(params);\n    return providers;\n  };\n\n  const navigateToCreate = (providerId: string) =>\n    navigate(\n      toIdentityProviderCreate({\n        realm,\n        providerId,\n      }),\n    );\n\n  const identityProviderOptions = () =>\n    Object.keys(identityProviders).map((group) => (\n      <DropdownGroup key={group} label={group}>\n        {sortBy(identityProviders[group], \"name\").map((provider) => (\n          <DropdownItem\n            key={provider.id}\n            value={provider.id}\n            component=\"a\"\n            data-testid={provider.id}\n            onClick={() =>\n              navigate(\n                toIdentityProviderCreate({\n                  realm,\n                  providerId: provider.id,\n                }),\n              )\n            }\n          >\n            {provider.name}\n          </DropdownItem>\n        ))}\n      </DropdownGroup>\n    ));\n\n  const [toggleDeleteDialog, DeleteConfirm] = useConfirmDialog({\n    titleKey: \"deleteProvider\",\n    messageKey: t(\"deleteConfirm\", { provider: selectedProvider?.alias }),\n    continueButtonLabel: \"delete\",\n    continueButtonVariant: ButtonVariant.danger,\n    onConfirm: async () => {\n      try {\n        await adminClient.identityProviders.del({\n          alias: selectedProvider!.alias!,\n        });\n        refresh();\n        addAlert(t(\"deletedSuccessIdentityProvider\"), AlertVariant.success);\n      } catch (error) {\n        addError(\"deleteErrorIdentityProvider\", error);\n      }\n    },\n  });\n\n  return (\n    <>\n      <DeleteConfirm />\n      {manageDisplayDialog && (\n        <ManageOrderDialog\n          hideRealmBasedIdps={hide}\n          onClose={() => {\n            setManageDisplayDialog(false);\n            refresh();\n          }}\n        />\n      )}\n      <ViewHeader\n        titleKey=\"identityProviders\"\n        subKey=\"listExplain\"\n        helpUrl={helpUrls.identityProvidersUrl}\n      />\n      <PageSection\n        variant={!hasProviders ? \"default\" : \"light\"}\n        className={!hasProviders ? \"\" : \"pf-v5-u-p-0\"}\n      >\n        {!hasProviders && (\n          <>\n            <TextContent>\n              <Text component={TextVariants.p}>{t(\"getStarted\")}</Text>\n            </TextContent>\n            {Object.keys(identityProviders).map((group) => (\n              <Fragment key={group}>\n                <TextContent>\n                  <Text className=\"pf-v5-u-mt-lg\" component={TextVariants.h2}>\n                    {group}:\n                  </Text>\n                </TextContent>\n                <hr className=\"pf-v5-u-mb-lg\" />\n                <Gallery hasGutter>\n                  {sortBy(identityProviders[group], \"name\").map((provider) => (\n                    <ClickableCard\n                      key={provider.id}\n                      data-testid={`${provider.id}-card`}\n                      onClick={() => navigateToCreate(provider.id)}\n                    >\n                      <CardTitle>\n                        <Split hasGutter>\n                          <SplitItem>\n                            <IconMapper icon={provider.id} />\n                          </SplitItem>\n                          <SplitItem isFilled>{provider.name}</SplitItem>\n                        </Split>\n                      </CardTitle>\n                    </ClickableCard>\n                  ))}\n                </Gallery>\n              </Fragment>\n            ))}\n          </>\n        )}\n        {hasProviders && (\n          <KeycloakDataTable\n            key={key}\n            loader={loader}\n            isPaginated\n            ariaLabelKey=\"identityProviders\"\n            searchPlaceholderKey=\"searchForProvider\"\n            toolbarItem={\n              <>\n                <ToolbarItem alignSelf=\"center\">\n                  <Checkbox\n                    label={t(\"hideOrganizationLinkedIdps\")}\n                    id=\"hideOrganizationLinkedIdps\"\n                    data-testid=\"hideOrganizationLinkedIdps\"\n                    isChecked={hide}\n                    onChange={(_event, check) => {\n                      setHide(check);\n                      refresh();\n                    }}\n                  />\n                </ToolbarItem>\n                <ToolbarItem>\n                  <Dropdown\n                    data-testid=\"addProviderDropdown\"\n                    onOpenChange={(isOpen) => setAddProviderOpen(isOpen)}\n                    toggle={(ref) => (\n                      <MenuToggle\n                        ref={ref}\n                        onClick={() => setAddProviderOpen(!addProviderOpen)}\n                        variant=\"primary\"\n                      >\n                        {t(\"addProvider\")}\n                      </MenuToggle>\n                    )}\n                    isOpen={addProviderOpen}\n                  >\n                    <DropdownList>{identityProviderOptions()}</DropdownList>\n                  </Dropdown>\n                </ToolbarItem>\n\n                <ToolbarItem>\n                  <Button\n                    data-testid=\"manageDisplayOrder\"\n                    variant=\"link\"\n                    onClick={() => setManageDisplayDialog(true)}\n                  >\n                    {t(\"manageDisplayOrder\")}\n                  </Button>\n                </ToolbarItem>\n              </>\n            }\n            actions={[\n              {\n                title: t(\"delete\"),\n                onRowClick: (provider) => {\n                  setSelectedProvider(provider);\n                  toggleDeleteDialog();\n                },\n              } as Action<IdentityProviderRepresentation>,\n            ]}\n            columns={[\n              {\n                name: \"alias\",\n                displayKey: \"name\",\n                cellRenderer: DetailLink,\n              },\n              {\n                name: \"providerId\",\n                displayKey: \"providerDetails\",\n                cellFormatters: [upperCaseFormatter()],\n              },\n              {\n                name: \"organizationId\",\n                displayKey: \"linkedOrganization\",\n                cellRenderer: OrganizationLink,\n              },\n            ]}\n            emptyState={\n              <ListEmptyState\n                message={t(\"identityProviders\")}\n                instructions={t(\"emptyRealmBasedIdps\")}\n                isSearchVariant\n                secondaryActions={[\n                  {\n                    text: t(\"clearAllFilters\"),\n                    onClick: () => {\n                      setHide(false);\n                      refresh();\n                    },\n                    type: ButtonVariant.link,\n                  },\n                ]}\n              />\n            }\n          />\n        )}\n      </PageSection>\n    </>\n  );\n}\n"],"names":["DropdownGroup","_a","children","className","label","labelHeadingLevel","props","__rest","React","MenuGroup","css","arrayAggregator","array","setter","iteratee","accumulator","index","length","value","baseAggregator","collection","baseEach","key","createAggregator","initializer","func","isArray","baseIteratee","objectProto","hasOwnProperty","groupBy","result","baseAssignValue","DetailLink","identityProvider","useTranslation","realm","useRealm","jsxs","Link","toIdentityProvider","jsx","Badge","OrganizationLink","toEditOrganization","IdentityProvidersSection","adminClient","useAdminClient","identityProviders","useServerInfo","navigate","useNavigate","setKey","useState","refresh","hide","setHide","addProviderOpen","setAddProviderOpen","manageDisplayDialog","setManageDisplayDialog","hasProviders","setHasProviders","selectedProvider","setSelectedProvider","addAlert","addError","useAlerts","useFetch","providers","loader","first","max","search","params","navigateToCreate","providerId","toIdentityProviderCreate","identityProviderOptions","group","provider","DropdownItem","toggleDeleteDialog","DeleteConfirm","useConfirmDialog","ButtonVariant","AlertVariant","error","Fragment","ManageOrderDialog","ViewHeader","helpUrls","PageSection","TextContent","Text","TextVariants","Gallery","sortBy","ClickableCard","CardTitle","Split","SplitItem","IconMapper","KeycloakDataTable","ToolbarItem","Checkbox","_event","check","Dropdown","isOpen","ref","MenuToggle","DropdownList","Button","upperCaseFormatter","ListEmptyState"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4]}