import{jsxs as F,jsx as S,Fragment as M}from"react/jsx-runtime";import*as e from"react";import{Children as q,isValidElement as J,cloneElement as v}from"react";import{at as Q,as as C,aH as X,h as N,ar as x,b5 as Y,dh as Z,cl as W,a1 as ee,dx as te,a as ae,A as R,aO as ne,F as ie,N as oe,be as se,K as re,bP as le,bO as pe}from"./main-Dml5vH_M.js";const m={clipboardCopy:"pf-v5-c-clipboard-copy",clipboardCopyActions:"pf-v5-c-clipboard-copy__actions",clipboardCopyActionsItem:"pf-v5-c-clipboard-copy__actions-item",clipboardCopyExpandableContent:"pf-v5-c-clipboard-copy__expandable-content",clipboardCopyGroup:"pf-v5-c-clipboard-copy__group",clipboardCopyText:"pf-v5-c-clipboard-copy__text",clipboardCopyToggleIcon:"pf-v5-c-clipboard-copy__toggle-icon",modifiers:{expanded:"pf-m-expanded",inline:"pf-m-inline",block:"pf-m-block",code:"pf-m-code"}},ce={name:"CopyIcon",height:512,width:448,svgPath:"M320 448v40c0 13.255-10.745 24-24 24H24c-13.255 0-24-10.745-24-24V120c0-13.255 10.745-24 24-24h72v296c0 30.879 25.121 56 56 56h168zm0-344V0H152c-13.255 0-24 10.745-24 24v368c0 13.255 10.745 24 24 24h272c13.255 0 24-10.745 24-24V128H344c-13.2 0-24-10.8-24-24zm120.971-31.029L375.029 7.029A24 24 0 0 0 358.059 0H352v96h96v-6.059a24 24 0 0 0-7.029-16.97z",yOffset:0,xOffset:0},de=Q(ce),$=n=>{var{onClick:o,exitDelay:s=0,entryDelay:t=300,maxWidth:a="100px",position:r="top","aria-label":l="Copyable input",id:p,textId:c,children:u,variant:y="control",onTooltipHidden:i=()=>{},className:b}=n,h=C(n,["onClick","exitDelay","entryDelay","maxWidth","position","aria-label","id","textId","children","variant","onTooltipHidden","className"]);const f=e.createRef();return e.createElement(X,{trigger:"mouseenter focus click",triggerRef:f,exitDelay:s,entryDelay:t,maxWidth:a,position:r,"aria-live":"polite",aria:"none",content:e.createElement("div",null,u),onTooltipHidden:i},e.createElement(N,Object.assign({type:"button",variant:y,onClick:o,"aria-label":l,className:b,id:p,"aria-labelledby":`${p} ${c}`},h,{ref:f}),e.createElement(de,null)))};$.displayName="ClipboardCopyButton";const j=n=>{var{onClick:o,id:s,textId:t,contentId:a,isExpanded:r=!1}=n,l=C(n,["onClick","id","textId","contentId","isExpanded"]);return e.createElement(N,Object.assign({type:"button",variant:"control",onClick:o,id:s,"aria-labelledby":`${s} ${t}`,"aria-controls":a,"aria-expanded":r},l),e.createElement("div",{className:x(m.clipboardCopyToggleIcon)},e.createElement(Y,{"aria-hidden":"true"})))};j.displayName="ClipboardCopyToggle";class O extends e.Component{constructor(o){super(o)}render(){const o=this.props,{className:s,children:t,onChange:a,isReadOnly:r,isCode:l}=o,p=C(o,["className","children","onChange","isReadOnly","isCode"]);return e.createElement("div",Object.assign({suppressContentEditableWarning:!0,className:x(m.clipboardCopyExpandableContent,s),onInput:c=>a(c,c.target.innerText),contentEditable:!r},p),l?e.createElement("pre",{dir:"ltr"},t):t)}}O.displayName="ClipboardCopyExpanded";O.defaultProps={onChange:()=>{},className:"",isReadOnly:!1,isCode:!1};const me=(n,o)=>{try{navigator.clipboard.writeText(o.toString())}catch(s){console.warn("Clipboard API not found, this copy function will not work. This is likely because you're using an",`unsupported browser or you're not using HTTPS. 

If you're a developer building an application which needs`,"to support copying to the clipboard without the clipboard API, you'll have to create your own copy","function and pass it to the ClipboardCopy component as the onCopy prop. For more information see","https://developer.mozilla.org/en-US/docs/Web/API/Navigator/clipboard"),console.error(s)}};var G;(function(n){n.inline="inline",n.expansion="expansion",n.inlineCompact="inline-compact"})(G||(G={}));class E extends e.Component{constructor(o){super(o),this.timer=null,this.componentDidUpdate=(t,a)=>{if(t.children!==this.props.children){const r=this.props.children;this.setState({text:r,textWhenExpanded:r})}},this.componentWillUnmount=()=>{this.timer&&window.clearTimeout(this.timer)},this.expandContent=t=>{this.setState(a=>({expanded:!a.expanded}))},this.updateText=(t,a)=>{this.setState({text:a}),this.props.onChange(t,a)},this.updateTextWhenExpanded=(t,a)=>{this.setState({textWhenExpanded:a}),this.props.onChange(t,a)},this.render=()=>{const t=this.props,{isExpanded:a,onChange:r,isReadOnly:l,isCode:p,isBlock:c,exitDelay:u,maxWidth:y,entryDelay:i,onCopy:b,hoverTip:h,clickTip:f,textAriaLabel:I,toggleAriaLabel:P,variant:k,position:_,className:L,additionalActions:D,ouiaId:B,ouiaSafe:z}=t,U=C(t,["isExpanded","onChange","isReadOnly","isCode","isBlock","exitDelay","maxWidth","entryDelay","onCopy","hoverTip","clickTip","textAriaLabel","toggleAriaLabel","variant","position","className","additionalActions","ouiaId","ouiaSafe"]),A="text-input-",V="toggle-",K="content-";return e.createElement("div",Object.assign({className:x(m.clipboardCopy,k==="inline-compact"&&m.modifiers.inline,c&&m.modifiers.block,this.state.expanded&&m.modifiers.expanded,L)},U,Z(E.displayName,B,z)),k==="inline-compact"&&e.createElement(W,{prefix:""},d=>e.createElement(e.Fragment,null,!p&&e.createElement("span",{className:x(m.clipboardCopyText),id:`${A}${d}`},this.state.text),p&&e.createElement("code",{className:x(m.clipboardCopyText,m.modifiers.code),id:`${A}${d}`},this.state.text),e.createElement("span",{className:x(m.clipboardCopyActions)},e.createElement("span",{className:x(m.clipboardCopyActionsItem)},e.createElement($,{variant:"plain",exitDelay:u,entryDelay:i,maxWidth:y,position:_,id:`copy-button-${d}`,textId:`text-input-${d}`,"aria-label":h,onClick:g=>{b(g,this.state.text),this.setState({copied:!0})},onTooltipHidden:()=>this.setState({copied:!1})},this.state.copied?f:h)),D&&D))),k!=="inline-compact"&&e.createElement(W,{prefix:""},d=>e.createElement(e.Fragment,null,e.createElement("div",{className:x(m.clipboardCopyGroup)},k==="expansion"&&e.createElement(j,{isExpanded:this.state.expanded,onClick:g=>{this.expandContent(g),this.state.expanded?this.setState({text:this.state.textWhenExpanded}):this.setState({textWhenExpanded:this.state.text})},id:`${V}${d}`,textId:`${A}${d}`,contentId:`${K}${d}`,"aria-label":P}),e.createElement(ee,Object.assign({readOnlyVariant:l||this.state.expanded?"default":void 0,onChange:this.updateText,value:this.state.expanded?this.state.textWhenExpanded:this.state.text,id:`text-input-${d}`,"aria-label":I},p&&{dir:"ltr"})),e.createElement($,{exitDelay:u,entryDelay:i,maxWidth:y,position:_,id:`copy-button-${d}`,textId:`text-input-${d}`,"aria-label":h,onClick:g=>{b(g,this.state.expanded?this.state.textWhenExpanded:this.state.text),this.setState({copied:!0})},onTooltipHidden:()=>this.setState({copied:!1})},this.state.copied?f:h)),this.state.expanded&&e.createElement(O,{isReadOnly:l,isCode:p,id:`content-${d}`,onChange:this.updateTextWhenExpanded},this.state.text))))};const s=Array.isArray(this.props.children)?this.props.children.join(""):this.props.children;this.state={text:s,expanded:this.props.isExpanded,copied:!1,textWhenExpanded:s}}}E.displayName="ClipboardCopy";E.defaultProps={hoverTip:"Copy to clipboard",clickTip:"Successfully copied to clipboard!",isReadOnly:!1,isExpanded:!1,isCode:!1,variant:"inline",position:te.top,maxWidth:"150px",exitDelay:1500,entryDelay:300,onCopy:me,onChange:()=>{},textAriaLabel:"Copyable input",toggleAriaLabel:"Show content",additionalActions:null,ouiaSafe:!0};const T={modifiers:{fill:"pf-m-fill",gutter:"pf-m-gutter"},stack:"pf-v5-l-stack",stackItem:"pf-v5-l-stack__item"},H=n=>{var{hasGutter:o=!1,className:s="",children:t=null,component:a="div"}=n,r=C(n,["hasGutter","className","children","component"]);const l=a;return e.createElement(l,Object.assign({},r,{className:x(T.stack,o&&T.modifiers.gutter,s)}),t)};H.displayName="Stack";const w=n=>{var{isFilled:o=!1,className:s="",children:t=null}=n,a=C(n,["isFilled","className","children"]);return e.createElement("div",Object.assign({},a,{className:x(T.stackItem,o&&T.modifiers.fill,s)}),t)};w.displayName="StackItem";const he="_buttonGroup_1gajx_1",ye={buttonGroup:he},xe=({name:n,save:o,saveText:s,reset:t,resetText:a,isSubmit:r=!1,isDisabled:l=!1,children:p,...c})=>{const{t:u}=ae();return F(R,{className:ye.buttonGroup,...c,children:[(o||r)&&S(N,{isDisabled:l,"data-testid":`${n}-save`,onClick:()=>o?.(),type:r?"submit":"button",children:s||u("save")}),t&&S(N,{isDisabled:l,"data-testid":`${n}-revert`,variant:"link",onClick:()=>t(),children:a||u("revert")}),p]})},Ce=({children:n,role:o,fineGrainedAccess:s=!1,isReadOnly:t=!1,unWrap:a=!1,...r})=>{const{hasAccess:l}=ne(),p=(u,y)=>q.map(u,i=>{if(!J(i))return i;if(i.props){const b=i;if(i.type===oe)return v(i,{...b.props,render:f=>{const I=b.props.render(f);return v(I,{...I.props,...y})}});const h=p(b.props.children,y);switch(i.type){case xe:return v(i,{isActive:!y.isDisabled,children:h});case se:return v(i,{readOnly:y.isDisabled,children:h})}return v(i,i.type===re||i.type===le||i.type===pe||i.type===R||i.type===E||i.type===H||i.type===w?{children:h}:{...y,children:h})}return i}),c=t||!l(o)&&!s;return F(M,{children:[!a&&S(ie,{...r,className:"keycloak__form "+(r.className||""),children:p(n,c?{isDisabled:c}:{})}),a&&p(n,c?{isDisabled:c}:{})]})};export{E as C,Ce as F,H as S,w as a,xe as b,$ as c};
//# sourceMappingURL=FormAccess-Dgk035ov.js.map
